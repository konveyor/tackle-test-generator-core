{
  "test_sequences" : {
    "com.densebrain.rif.server.transport.WebServiceContainer" : {
      "sequences" : [ "{\r\n    WebServiceContainer webServiceContainer0 = WebServiceContainer.newInstance(\"2uBhEZR2)Qk0a=p8_\", 117, \"2uBhEZR2)Qk0a=p8_\");\r\n    WebServiceContainer webServiceContainer1 = webServiceContainer0.restartContainer();\r\n}", "{\r\n    WebServiceContainer webServiceContainer0 = WebServiceContainer.newInstance(\"\", (-167), \"\");\r\n    Class<Integer> class0 = Integer.class;\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor(class0, \"\", \"\");\r\n    Class<WebServiceDescriptor> class1 = WebServiceDescriptor.class;\r\n    webServiceDescriptor0.serviceClazz = class1;\r\n    webServiceContainer0.configureService(webServiceDescriptor0);\r\n}", "{\r\n    WebServiceContainer webServiceContainer0 = WebServiceContainer.newInstance((String) null, (-1830), \"9\");\r\n}", "{\r\n    WebServiceContainer webServiceContainer0 = WebServiceContainer.newInstance((ConfigurationContext) null);\r\n    Class<String> class0 = String.class;\r\n    try {\r\n        webServiceContainer0.configureService(class0, \"^z^M5squz}JS%f.*\", \"Unable to initialize container\");\r\n    } catch (RemoteException e) {\r\n        // \r\n        // Unable to add service; nested exception is:\r\n        // \\tjava.lang.NullPointerException\r\n        // \r\n        verifyException(\"com.densebrain.rif.server.transport.WebServiceContainer\", e);\r\n    }\r\n}", "{\r\n    WebServiceContainer webServiceContainer0 = WebServiceContainer.newInstance((ConfigurationContext) null);\r\n    WebServiceContainer webServiceContainer1 = webServiceContainer0.restartContainer();\r\n}", "{\r\n    WebServiceContainer webServiceContainer0 = WebServiceContainer.newInstance((ConfigurationContext) null);\r\n    EndpointReference endpointReference0 = webServiceContainer0.getEPRForService(\"Unable to add service\", \".-}XF\");\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.apache.axis2.context.ConfigurationContext", "com.densebrain.rif.server.transport.WebServiceContainer", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "org.apache.axis2.addressing.EndpointReference", "java.rmi.RemoteException", "org.evosuite.runtime.EvoRunnerParameters", "com.densebrain.rif.server.transport.WebServiceDescriptor", "org.evosuite.runtime.EvoRunner", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.densebrain.rif.client.RIFManagerFactory" : {
      "sequences" : [ "{\r\n    RIFManagerFactory rIFManagerFactory0 = RIFManagerFactory.getInstance();\r\n    Class<Object> class0 = Object.class;\r\n    try {\r\n        rIFManagerFactory0.getImpl(\"\", class0);\r\n    } catch (RemoteException e) {\r\n        // \r\n        // Interface class must be an interface\r\n        // \r\n        verifyException(\"com.densebrain.rif.client.RIFInvoker\", e);\r\n    }\r\n}" ],
      "imports" : [ "com.densebrain.rif.client.RIFManagerFactory", "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals", "java.rmi.RemoteException" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.densebrain.rif.client.service.types.InvokeResponse" : {
      "sequences" : [ "{\r\n    InvokeResponse invokeResponse0 = new InvokeResponse();\r\n    invokeResponse0.local_return = \"R\";\r\n    XMLStreamReader xMLStreamReader0 = invokeResponse0.getPullParser(invokeResponse0.MY_QNAME);\r\n    try {\r\n        InvokeResponse.Factory.parse(xMLStreamReader0);\r\n    } catch (Exception e) {\r\n        // \r\n        // javax.xml.stream.XMLStreamException\r\n        // \r\n        verifyException(\"com.densebrain.rif.client.service.types.InvokeResponse$Factory\", e);\r\n    }\r\n}", "{\r\n    InvokeResponse invokeResponse0 = new InvokeResponse();\r\n    String string0 = invokeResponse0.get_return();\r\n}", "{\r\n    InvokeResponse.Factory invokeResponse_Factory0 = new InvokeResponse.Factory();\r\n}", "{\r\n    InvokeResponse invokeResponse0 = new InvokeResponse();\r\n    invokeResponse0.set_return(\"\");\r\n}" ],
      "imports" : [ "com.densebrain.rif.client.service.types.InvokeResponse", "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "javax.xml.stream.XMLStreamReader", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.densebrain.rif.client.RIFClassLoader" : {
      "sequences" : [ "{\r\n    RIFClassLoader rIFClassLoader0 = new RIFClassLoader();\r\n    Class<?> class0 = rIFClassLoader0.findClass(\"zREV$fnxdb.Lk7v\");\r\n}", "{\r\n    RIFClassLoader rIFClassLoader0 = new RIFClassLoader();\r\n    byte[] byteArray0 = new byte[0];\r\n    // Undeclared exception!\r\n    try {\r\n        rIFClassLoader0.registerClass(\"zREV$fnxdb.Lk7v\", byteArray0);\r\n    } catch (ClassFormatError e) {\r\n    }\r\n}" ],
      "imports" : [ "com.densebrain.rif.client.RIFClassLoader", "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.densebrain.rif.client.RIFManager" : {
      "sequences" : [ "{\r\n    RIFManager rIFManager0 = new RIFManager(\"\");\r\n    RIFService rIFService0 = rIFManager0.getService();\r\n}", "{\r\n    RIFManager rIFManager0 = new RIFManager(\"P~<8~]?k%q/>?SWX=\");\r\n    RIFClassLoader rIFClassLoader0 = rIFManager0.getClassLoader();\r\n}", "{\r\n    RIFManager rIFManager0 = new RIFManager(\"\");\r\n    Class<Object> class0 = Object.class;\r\n    try {\r\n        rIFManager0.getInvoker(class0);\r\n    } catch (RemoteException e) {\r\n        // \r\n        // Interface class must be an interface\r\n        // \r\n        verifyException(\"com.densebrain.rif.client.RIFInvoker\", e);\r\n    }\r\n}" ],
      "imports" : [ "com.densebrain.rif.client.RIFClassLoader", "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "com.densebrain.rif.client.service.RIFService", "org.evosuite.runtime.EvoRunner", "com.densebrain.rif.client.RIFManager", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals", "java.rmi.RemoteException" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.densebrain.rif.client.service.types.Invoke" : {
      "sequences" : [ "{\r\n    Invoke invoke0 = new Invoke();\r\n    invoke0.localSerializedParams = \"\";\r\n    invoke0.setClassName(\",%UlpG`uWY1C\");\r\n    invoke0.setMethodName(\"ic~V+Wi mCrp\");\r\n    XMLStreamReader xMLStreamReader0 = invoke0.getPullParser(invoke0.MY_QNAME);\r\n    try {\r\n        Invoke.Factory.parse(xMLStreamReader0);\r\n    } catch (Exception e) {\r\n        // \r\n        // javax.xml.stream.XMLStreamException\r\n        // \r\n        verifyException(\"com.densebrain.rif.client.service.types.Invoke$Factory\", e);\r\n    }\r\n}", "{\r\n    Invoke invoke0 = new Invoke();\r\n    String string0 = invoke0.getClassName();\r\n}", "{\r\n    Invoke invoke0 = new Invoke();\r\n    invoke0.setSerializedParams(\"G@Go8WvN-.@VsT\");\r\n}", "{\r\n    Invoke invoke0 = new Invoke();\r\n    String string0 = invoke0.getMethodName();\r\n}", "{\r\n    Invoke invoke0 = new Invoke();\r\n    String string0 = invoke0.getSerializedParams();\r\n}", "{\r\n    Invoke.Factory invoke_Factory0 = new Invoke.Factory();\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "javax.xml.stream.XMLStreamReader", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals", "com.densebrain.rif.client.service.types.Invoke" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.densebrain.rif.util.ObjectUtility" : {
      "sequences" : [ "{\r\n    byte[] byteArray0 = ObjectUtility.serializeObject(\"AA==\");\r\n}", "{\r\n    try {\r\n        ObjectUtility.deserializeObjectBase64Encoded(\"\");\r\n    } catch (EOFException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"java.io.ObjectInputStream$PeekInputStream\", e);\r\n    }\r\n}", "{\r\n    byte[] byteArray0 = new byte[1];\r\n    String string0 = ObjectUtility.encodeBytes(byteArray0);\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals", "java.io.EOFException", "com.densebrain.rif.util.ObjectUtility" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.densebrain.rif.server.RIFImplementationManager" : {
      "sequences" : [ "{\r\n    RIFImplementationManager rIFImplementationManager0 = RIFImplementationManager.getInstance();\r\n    Object[] objectArray0 = new Object[0];\r\n    try {\r\n        rIFImplementationManager0.invoke(\"&:\", \"<y419c,@e\", objectArray0);\r\n    } catch (RemoteException e) {\r\n        // \r\n        // Not registered: &:\r\n        // \r\n        verifyException(\"com.densebrain.rif.server.RIFImplementationManager\", e);\r\n    }\r\n}", "{\r\n    RIFImplementationManager rIFImplementationManager0 = RIFImplementationManager.getInstance();\r\n    Class<Integer> class0 = Integer.class;\r\n    Object object0 = new Object();\r\n    rIFImplementationManager0.registerImplementation(class0, object0);\r\n}" ],
      "imports" : [ "com.densebrain.rif.server.RIFImplementationManager", "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals", "java.rmi.RemoteException" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.densebrain.rif.server.RIFService" : {
      "sequences" : [ "{\r\n    RIFService rIFService0 = new RIFService();\r\n    try {\r\n        rIFService0.invoke(\"3U}.jG\", \";5o@$3\", \"3U}.jG\");\r\n    } catch (RemoteException e) {\r\n        // \r\n        // Unable to deserialize parameters: null; nested exception is:\r\n        // \\tjava.io.EOFException\r\n        // \r\n        verifyException(\"com.densebrain.rif.server.RIFService\", e);\r\n    }\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "com.densebrain.rif.server.RIFService", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals", "java.rmi.RemoteException" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.densebrain.rif.client.RIFInvoker" : {
      "sequences" : [ "{\r\n    RIFManager rIFManager0 = new RIFManager(\"mL\");\r\n    RIFInvoker<Object> rIFInvoker0 = null;\r\n    try {\r\n        rIFInvoker0 = new RIFInvoker<Object>(rIFManager0, (Class) null);\r\n    } catch (Throwable e) {\r\n        // \r\n        // Interface class can not be null\r\n        // \r\n        verifyException(\"com.densebrain.rif.client.RIFInvoker\", e);\r\n    }\r\n}", "{\r\n    Class<Object> class0 = Object.class;\r\n    RIFInvoker<Object> rIFInvoker0 = null;\r\n    try {\r\n        rIFInvoker0 = new RIFInvoker<Object>((RIFManager) null, class0);\r\n    } catch (Throwable e) {\r\n        // \r\n        // Interface class must be an interface\r\n        // \r\n        verifyException(\"com.densebrain.rif.client.RIFInvoker\", e);\r\n    }\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "com.densebrain.rif.client.RIFInvoker", "com.densebrain.rif.client.RIFManager", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.densebrain.rif.server.transport.WebServiceDescriptor" : {
      "sequences" : [ "{\r\n    Class<Object> class0 = Object.class;\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor(class0, \"\", \"\");\r\n    Class class1 = webServiceDescriptor0.getServiceClazz();\r\n}", "{\r\n    Class<Object> class0 = Object.class;\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor(class0, \"^*ek.cq+,I<&~GG\", \"\");\r\n    webServiceDescriptor0.setTypesNamespace(\"\");\r\n}", "{\r\n    Class<Object> class0 = Object.class;\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor(class0, \"1oXNm\", \"1oXNm\");\r\n    Class<Integer> class1 = Integer.class;\r\n    WebServiceDescriptor webServiceDescriptor1 = new WebServiceDescriptor(class1, \"1oXNm\", \"1oXNm\");\r\n    boolean boolean0 = webServiceDescriptor0.equals(webServiceDescriptor1);\r\n}", "{\r\n    Class<Object> class0 = Object.class;\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor(class0, (String) null, \"1EIi;yNgPNqL?9ltS\");\r\n    WebServiceDescriptor webServiceDescriptor1 = new WebServiceDescriptor(class0, \"9P\\\"z=;jRCid0^=g1[\", \"9P\\\"z=;jRCid0^=g1[\");\r\n    boolean boolean0 = webServiceDescriptor0.equals(webServiceDescriptor1);\r\n}", "{\r\n    Class<WebServiceDescriptor> class0 = WebServiceDescriptor.class;\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor(class0, \",f3DK;m7.\\\"J\", \"\");\r\n    boolean boolean0 = webServiceDescriptor0.equals(webServiceDescriptor0);\r\n}", "{\r\n    Class<String> class0 = String.class;\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor(class0, \"+Ki<Rz2@K@xT5vH\", \"+Ki<Rz2@K@xT5vH\");\r\n    Class<Integer> class1 = Integer.class;\r\n    webServiceDescriptor0.setServiceClazz(class1);\r\n}", "{\r\n    Class<Object> class0 = Object.class;\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor(class0, \"\", \"\");\r\n    int int0 = webServiceDescriptor0.hashCode();\r\n}", "{\r\n    Class<String> class0 = String.class;\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor(class0, \"+Ki<Rz2@K@xT5vH\", \"+Ki<Rz2@K@xT5vH\");\r\n    String string0 = webServiceDescriptor0.getTargetNamespace();\r\n}", "{\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor((Class) null, \",f3DK;m7.\\\"J\", \",f3DK;m7.\\\"J\");\r\n    Class<String> class0 = String.class;\r\n    WebServiceDescriptor webServiceDescriptor1 = new WebServiceDescriptor(class0, \",f3DK;m7.\\\"J\", \"j`i[j7<H:%VHX+\");\r\n    boolean boolean0 = webServiceDescriptor0.equals(webServiceDescriptor1);\r\n}", "{\r\n    Class<Object> class0 = Object.class;\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor(class0, \"\", \"\");\r\n    Object object0 = new Object();\r\n    boolean boolean0 = webServiceDescriptor0.equals(object0);\r\n}", "{\r\n    Class<Object> class0 = Object.class;\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor(class0, \"^*ek.cq+,I<&~GG\", \"\");\r\n    String string0 = webServiceDescriptor0.getTypesNamespace();\r\n}", "{\r\n    Class<String> class0 = String.class;\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor(class0, \"+Ki<Rz2@K@xT5vH\", \"+Ki<Rz2@K@xT5vH\");\r\n    webServiceDescriptor0.setTargetNamespace(\"\");\r\n}", "{\r\n    Class<String> class0 = String.class;\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor(class0, \"+Ki<Rz2@K@xT5vH\", \"+Ki<Rz2@K@xT5vH\");\r\n    boolean boolean0 = webServiceDescriptor0.equals((Object) null);\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "com.densebrain.rif.server.transport.WebServiceDescriptor", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.densebrain.rif.client.service.RIFServiceStub" : {
      "sequences" : [ "{\r\n    Invoke invoke0 = new Invoke();\r\n    invoke0.setSerializedParams(\"1.0\");\r\n    invoke0.setClassName(\"\");\r\n    invoke0.setMethodName(\"\");\r\n    RIFServiceStub rIFServiceStub0 = new RIFServiceStub(\"\");\r\n    try {\r\n        rIFServiceStub0.invoke(invoke0);\r\n    } catch (AxisFault e) {\r\n        // \r\n        // Cannot infer transport information from the URL\r\n        // \r\n        verifyException(\"org.apache.axis2.description.ClientUtils\", e);\r\n    }\r\n}", "{\r\n    RIFServiceStub rIFServiceStub0 = new RIFServiceStub();\r\n    // Undeclared exception!\r\n    try {\r\n        rIFServiceStub0.invoke((Invoke) null);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"org.apache.axis2.context.MessageContext\", e);\r\n    }\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "org.apache.axis2.AxisFault", "static org.junit.Assert.assertEquals", "com.densebrain.rif.client.service.RIFServiceStub", "com.densebrain.rif.client.service.types.Invoke" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.densebrain.rif.server.RIFServer" : {
      "sequences" : [ "{\r\n    RIFServer rIFServer0 = new RIFServer(0);\r\n    rIFServer0.start();\r\n}", "{\r\n    RIFServer rIFServer0 = new RIFServer(0);\r\n    rIFServer0.stop();\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals", "com.densebrain.rif.server.RIFServer" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    }
  },
  "test_generation_tool" : "EvoSuiteTestGenerator"
}
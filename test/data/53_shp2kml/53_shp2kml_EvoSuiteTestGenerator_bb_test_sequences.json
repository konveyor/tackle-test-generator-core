{
  "test_sequences" : {
    "net.sourceforge.shp2kml.Shp2KMLGUI" : {
      "sequences" : [ "{\r\n    Shp2KMLGUI shp2KMLGUI0 = null;\r\n    try {\r\n        shp2KMLGUI0 = new Shp2KMLGUI();\r\n    } catch (HeadlessException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"java.awt.GraphicsEnvironment\", e);\r\n    }\r\n}" ],
      "imports" : [ "net.sourceforge.shp2kml.Shp2KMLGUI", "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "java.awt.HeadlessException", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "net.sourceforge.shp2kml.GeomConverter" : {
      "sequences" : [ "{\r\n    Coordinate[] coordinateArray0 = new Coordinate[0];\r\n    String string0 = GeomConverter.convertPolygon(coordinateArray0);\r\n}", "{\r\n    Coordinate[] coordinateArray0 = new Coordinate[0];\r\n    GeometryFactory geometryFactory0 = new GeometryFactory();\r\n    LineString lineString0 = geometryFactory0.createLineString(coordinateArray0);\r\n    String string0 = GeomConverter.getPlacemarkKML((Geometry) lineString0, \"hrMm9:N:9~kO)$=~\", \"<Point><extrude>-476.692637885</extrude><altitudeMode>relativeToGround</altitudeMode><coordinates></coordinates></Point>\", (-476.692637885));\r\n}", "{\r\n    Coordinate coordinate0 = new Coordinate((-1.0), (-1.0));\r\n    PrecisionModel precisionModel0 = new PrecisionModel((-1.0));\r\n    Point point0 = new Point(coordinate0, precisionModel0, 0);\r\n    Geometry geometry0 = point0.getBoundary();\r\n    String string0 = GeomConverter.getPlacemarkKML(geometry0);\r\n}", "{\r\n    Coordinate[] coordinateArray0 = new Coordinate[3];\r\n    Coordinate coordinate0 = new Coordinate(0.0, 0.0, 0.0);\r\n    coordinateArray0[0] = coordinate0;\r\n    PrecisionModel precisionModel0 = new PrecisionModel(0.0, 0.0, 0.0);\r\n    coordinateArray0[1] = coordinateArray0[0];\r\n    coordinateArray0[2] = coordinateArray0[0];\r\n    precisionModel0.toInternal(coordinate0, coordinateArray0[1]);\r\n    String string0 = GeomConverter.getLinearRingKML(coordinateArray0);\r\n}", "{\r\n    Polygon[] polygonArray0 = new Polygon[4];\r\n    float[] floatArray0 = new float[7];\r\n    PackedCoordinateSequence.Double packedCoordinateSequence_Double0 = new PackedCoordinateSequence.Double(floatArray0, 42);\r\n    PrecisionModel precisionModel0 = new PrecisionModel((-23.92F));\r\n    GeometryFactory geometryFactory0 = new GeometryFactory(precisionModel0, 2006);\r\n    LinearRing linearRing0 = new LinearRing(packedCoordinateSequence_Double0, geometryFactory0);\r\n    LinearRing[] linearRingArray0 = new LinearRing[5];\r\n    linearRingArray0[0] = linearRing0;\r\n    linearRingArray0[1] = linearRing0;\r\n    linearRingArray0[2] = linearRing0;\r\n    linearRingArray0[3] = linearRing0;\r\n    linearRingArray0[4] = linearRing0;\r\n    Polygon polygon0 = new Polygon(linearRing0, linearRingArray0, precisionModel0, 42);\r\n    polygonArray0[0] = polygon0;\r\n    String string0 = GeomConverter.getPlacemarkKML((Geometry) polygonArray0[0]);\r\n}", "{\r\n    Coordinate[] coordinateArray0 = new Coordinate[4];\r\n    PackedCoordinateSequence.Double packedCoordinateSequence_Double0 = new PackedCoordinateSequence.Double(511, 511);\r\n    Coordinate coordinate0 = packedCoordinateSequence_Double0.getCoordinateCopy(2);\r\n    coordinateArray0[0] = coordinate0;\r\n    PrecisionModel precisionModel0 = new PrecisionModel(0.0, 0.0, 0.0);\r\n    precisionModel0.toInternal(coordinateArray0[0], coordinate0);\r\n    coordinateArray0[3] = coordinateArray0[0];\r\n    String string0 = GeomConverter.convertPolygonWithAltitude(coordinateArray0, 785.0);\r\n}", "{\r\n    DefaultCoordinateSequenceFactory defaultCoordinateSequenceFactory0 = DefaultCoordinateSequenceFactory.instance();\r\n    GeometryFactory geometryFactory0 = new GeometryFactory(defaultCoordinateSequenceFactory0);\r\n    CoordinateArraySequence coordinateArraySequence0 = new CoordinateArraySequence((CoordinateSequence) null);\r\n    Point point0 = geometryFactory0.createPoint((CoordinateSequence) coordinateArraySequence0);\r\n    String string0 = GeomConverter.getPlacemarkKML((Geometry) point0);\r\n}", "{\r\n    Coordinate[] coordinateArray0 = new Coordinate[0];\r\n    String string0 = GeomConverter.convertPoint(coordinateArray0);\r\n}", "{\r\n    GeomConverter geomConverter0 = new GeomConverter();\r\n}", "{\r\n    // Undeclared exception!\r\n    try {\r\n        GeomConverter.convertLine((Coordinate[]) null);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"net.sourceforge.shp2kml.GeomConverter\", e);\r\n    }\r\n}", "{\r\n    Coordinate[] coordinateArray0 = new Coordinate[4];\r\n    PackedCoordinateSequence.Double packedCoordinateSequence_Double0 = new PackedCoordinateSequence.Double(511, 511);\r\n    Coordinate coordinate0 = packedCoordinateSequence_Double0.getCoordinateCopy(2);\r\n    coordinateArray0[0] = coordinate0;\r\n    coordinateArray0[1] = coordinate0;\r\n    coordinateArray0[2] = coordinate0;\r\n    coordinateArray0[3] = coordinateArray0[1];\r\n    String string0 = GeomConverter.convertPolygonWithAltitude(coordinateArray0, 785.0);\r\n}" ],
      "imports" : [ "com.vividsolutions.jts.geom.LinearRing", "com.vividsolutions.jts.geom.Coordinate", "static org.junit.Assert.assertNull", "net.sourceforge.shp2kml.GeomConverter", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "com.vividsolutions.jts.geom.PrecisionModel", "com.vividsolutions.jts.geom.LineString", "com.vividsolutions.jts.geom.Point", "com.vividsolutions.jts.geom.DefaultCoordinateSequenceFactory", "com.vividsolutions.jts.geom.impl.CoordinateArraySequence", "com.vividsolutions.jts.geom.impl.PackedCoordinateSequence", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "com.vividsolutions.jts.geom.Geometry", "com.vividsolutions.jts.geom.CoordinateSequence", "com.vividsolutions.jts.geom.GeometryFactory", "static org.junit.Assert.assertEquals", "com.vividsolutions.jts.geom.Polygon" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "net.sourceforge.shp2kml.Converter" : {
      "sequences" : [ "{\r\n    String[] stringArray0 = new String[0];\r\n    // Undeclared exception!\r\n    try {\r\n        Converter.main(stringArray0);\r\n    } catch (HeadlessException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"java.awt.GraphicsEnvironment\", e);\r\n    }\r\n}", "{\r\n    Converter converter0 = new Converter();\r\n}", "{\r\n    String[] stringArray0 = new String[5];\r\n    Converter.main(stringArray0);\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "net.sourceforge.shp2kml.Converter", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "java.awt.HeadlessException", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "net.sourceforge.shp2kml.KMLObject" : {
      "sequences" : [ "{\r\n    KMLObject kMLObject0 = new KMLObject(\"\");\r\n    boolean boolean0 = kMLObject0.addPlacemark(\"rq5*g%y ~\");\r\n}", "{\r\n    KMLObject kMLObject0 = new KMLObject(\"\");\r\n    boolean boolean0 = kMLObject0.FinishWrite();\r\n}", "{\r\n    KMLObject kMLObject0 = new KMLObject(\"\");\r\n    boolean boolean0 = kMLObject0.StartWrite();\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals", "net.sourceforge.shp2kml.KMLObject" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    }
  },
  "test_generation_tool" : "EvoSuiteTestGenerator"
}
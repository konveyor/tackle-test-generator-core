{
  "test_sequences" : {
    "com.hf.sfm.util.BasePara" : {
      "sequences" : [ "{\r\n    BasePara basePara0 = new BasePara();\r\n    basePara0.setStart(0);\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    basePara0.setQueryValue((String) null);\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    String string0 = basePara0.getSql();\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    String string0 = basePara0.getQuerySql();\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    String[][] stringArray0 = basePara0.getArr2params();\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    basePara0.setSqlpath(\"3./pg,Qi#X~.hZj\");\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    boolean boolean0 = basePara0.isPaging();\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    String[] stringArray0 = new String[8];\r\n    basePara0.setQueryparams(stringArray0);\r\n    String[][] stringArray1 = basePara0.single2plannar();\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    int int0 = basePara0.getLimit();\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    basePara0.setSql(\"com.hf.sfm.util.OddParamsOfArrayInLoader\");\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    String string0 = basePara0.getSort();\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    int int0 = basePara0.getStart();\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    String[] stringArray0 = new String[1];\r\n    basePara0.setQueryparams(stringArray0);\r\n    String[][] stringArray1 = basePara0.single2plannar();\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    basePara0.setDir(\"\");\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    String string0 = basePara0.getOrdersql();\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    String string0 = basePara0.getGroupsql();\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    basePara0.setSort(\"aQ6uL\");\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    String[][] stringArray0 = basePara0.single2plannar();\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    String string0 = basePara0.getSqlpath();\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    basePara0.setArr2params((String[][]) null);\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    basePara0.setLimit((-694));\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    String[] stringArray0 = basePara0.getQueryparams();\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    basePara0.setPaging(false);\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    basePara0.setGroupsql(\"com.hf.sfm.util.OddParamsOfArrayInLoader\");\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    basePara0.setOrdersql(\"8HUWhRgc\");\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    String string0 = basePara0.getDir();\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    String string0 = basePara0.getQueryValue();\r\n}", "{\r\n    BasePara basePara0 = new BasePara();\r\n    basePara0.setQuerySql(\"com.hf.sfm.util.OddParamsOfArrayInLoader\");\r\n}" ],
      "imports" : [ "com.hf.sfm.util.BasePara", "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.hf.sfm.system.business.Login" : {
      "sequences" : [ "{\r\n    Login login0 = new Login();\r\n    HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());\r\n    doReturn((String) null, (String) null).when(httpServletRequest0).getParameter(anyString());\r\n    HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);\r\n    HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());\r\n    HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);\r\n    // Undeclared exception!\r\n    try {\r\n        login0.doGet(httpServletRequestWrapper0, httpServletResponseWrapper0);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"com.hf.sfm.util.HibernateSessionFactory\", e);\r\n    }\r\n}", "{\r\n    Login login0 = new Login();\r\n    login0.destroy();\r\n}", "{\r\n    Login login0 = new Login();\r\n    login0.init();\r\n}" ],
      "imports" : [ "com.hf.sfm.system.business.Login", "static org.junit.Assert.assertNull", "javax.servlet.http.HttpServletRequestWrapper", "javax.servlet.http.HttpServletResponse", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "javax.servlet.http.HttpServletRequest", "static org.evosuite.shaded.org.mockito.Mockito.*", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "javax.servlet.http.HttpServletResponseWrapper", "org.evosuite.runtime.ViolatedAssumptionAnswer", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.hf.sfm.sfmis.personinfo.business.PersonInfoMgr" : {
      "sequences" : [ "{\r\n    PersonInfoMgr personInfoMgr0 = new PersonInfoMgr();\r\n}" ],
      "imports" : [ "com.hf.sfm.sfmis.personinfo.business.PersonInfoMgr", "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.hf.sfm.util.HibernateSessionFactory" : {
      "sequences" : [ "{\r\n    HibernateSessionFactory hibernateSessionFactory0 = new HibernateSessionFactory();\r\n}", "{\r\n    String[] stringArray0 = new String[8];\r\n    // Undeclared exception!\r\n    try {\r\n        HibernateSessionFactory.main(stringArray0);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"com.hf.sfm.util.HibernateSessionFactory\", e);\r\n    }\r\n}", "{\r\n    HibernateSessionFactory.closeSession();\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "com.hf.sfm.util.HibernateSessionFactory", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.hf.sfm.system.pdo.AWorker" : {
      "sequences" : [ "{\r\n    AWorker aWorker0 = new AWorker();\r\n    aWorker0.setIdno(\"6>DfrbyFh\");\r\n}", "{\r\n    AWorker aWorker0 = new AWorker();\r\n    String string0 = aWorker0.getPersonid();\r\n}", "{\r\n    AWorker aWorker0 = new AWorker(\"\", \"\", \"\", \"[ !d:-C&aD6jZM\", \"[ !d:-C&aD6jZM\", (String) null);\r\n    aWorker0.setGroupid(\"\");\r\n}", "{\r\n    AWorker aWorker0 = new AWorker(\"\", \"\", \"\", \"[ !d:-C&aD6jZM\", \"[ !d:-C&aD6jZM\", (String) null);\r\n    aWorker0.setState(\")9<1D: H%V^JOetu\");\r\n}", "{\r\n    AWorker aWorker0 = new AWorker(\"\", \"\", \"\", \"[ !d:-C&aD6jZM\", \"[ !d:-C&aD6jZM\", (String) null);\r\n    String string0 = aWorker0.getPassword();\r\n}", "{\r\n    AWorker aWorker0 = new AWorker();\r\n    String string0 = aWorker0.getGroupid();\r\n}", "{\r\n    AWorker aWorker0 = new AWorker(\"\", \"\", \"\", \"[ !d:-C&aD6jZM\", \"[ !d:-C&aD6jZM\", (String) null);\r\n    aWorker0.setFlatid(\"3%$9GGV\");\r\n}", "{\r\n    AWorker aWorker0 = new AWorker(\"\", \"\", \"\", \"[ !d:-C&aD6jZM\", \"[ !d:-C&aD6jZM\", (String) null);\r\n    String string0 = aWorker0.getFlatid();\r\n}", "{\r\n    AWorker aWorker0 = new AWorker(\"\", \"\", \"\", \"[ !d:-C&aD6jZM\", \"[ !d:-C&aD6jZM\", (String) null);\r\n    aWorker0.setAccount(\"\");\r\n}", "{\r\n    AWorker aWorker0 = new AWorker(\"\", \"\", \"\", \"[ !d:-C&aD6jZM\", \"[ !d:-C&aD6jZM\", (String) null);\r\n    String string0 = aWorker0.getIdno();\r\n}", "{\r\n    AWorker aWorker0 = new AWorker();\r\n    String string0 = aWorker0.getAccount();\r\n}", "{\r\n    AWorker aWorker0 = new AWorker();\r\n    aWorker0.setPassword(\"\");\r\n}", "{\r\n    AWorker aWorker0 = new AWorker(\"\", \"\", \"\", \"[ !d:-C&aD6jZM\", \"[ !d:-C&aD6jZM\", (String) null);\r\n    aWorker0.setPersonid(\"\");\r\n}", "{\r\n    AWorker aWorker0 = new AWorker();\r\n    String string0 = aWorker0.getState();\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "com.hf.sfm.system.pdo.AWorker", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.hf.sfm.system.pdo.Menu" : {
      "sequences" : [ "{\r\n    Menu menu0 = new Menu();\r\n    menu0.setSort(\"VCclR\");\r\n}", "{\r\n    Menu menu0 = new Menu(\"\", \"\", \"\", \"\", \"*RbQ'\", \"W\", \"\");\r\n    menu0.setStatus((String) null);\r\n}", "{\r\n    Menu menu0 = new Menu();\r\n    menu0.setParentid(\"3w<G\");\r\n}", "{\r\n    Menu menu0 = new Menu();\r\n    menu0.setImg(\"#@LeBrC3?\");\r\n}", "{\r\n    Menu menu0 = new Menu(\"\", \"com.hf.sfm.system.pdo.Menu\", \"\", \"* r6r0ox&I;Zpl_\", \"com.hf.sfm.system.pdo.Menu\", \"anL\", \"\");\r\n    String string0 = menu0.getUrl();\r\n}", "{\r\n    Menu menu0 = new Menu();\r\n    menu0.setOper(\"\");\r\n}", "{\r\n    Menu menu0 = new Menu();\r\n    String string0 = menu0.getImg();\r\n}", "{\r\n    Menu menu0 = new Menu(\"\", \"\", \"\", \"\", \"*RbQ'\", \"W\", \"\");\r\n    menu0.setUrl(\"\");\r\n}", "{\r\n    Menu menu0 = new Menu();\r\n    String string0 = menu0.getSort();\r\n}", "{\r\n    Menu menu0 = new Menu();\r\n    String string0 = menu0.getName();\r\n}", "{\r\n    Menu menu0 = new Menu(\"\", \"\", \"\", \"a?MR13SsI(,\", \"\", \"\", \"a?MR13SsI(,\");\r\n    String string0 = menu0.getOper();\r\n}", "{\r\n    Menu menu0 = new Menu(\"\", \"\", \"\", \"\", \"*RbQ'\", \"W\", \"\");\r\n    String string0 = menu0.getStatus();\r\n}", "{\r\n    Menu menu0 = new Menu(\"\", \"\", \"\", \"\", \"*RbQ'\", \"W\", \"\");\r\n    menu0.setName(\"*RbQ'\");\r\n}", "{\r\n    Menu menu0 = new Menu();\r\n    menu0.setIdno(\"\");\r\n}", "{\r\n    Menu menu0 = new Menu();\r\n    String string0 = menu0.getIdno();\r\n}", "{\r\n    Menu menu0 = new Menu(\"\", \"\", \"\", \"a?MR13SsI(,\", \"\", \"\", \"a?MR13SsI(,\");\r\n    String string0 = menu0.getParentid();\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "com.hf.sfm.system.pdo.Menu", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.hf.sfm.crypt.Base64" : {
      "sequences" : [ "{\r\n    Base64 base64_0 = new Base64();\r\n}", "{\r\n    byte[] byteArray0 = Base64.altBase64ToByteArray(\"\");\r\n}", "{\r\n    byte[] byteArray0 = new byte[2];\r\n    String string0 = Base64.byteArrayToAltBase64(byteArray0);\r\n}", "{\r\n    byte[] byteArray0 = Base64.altBase64ToByteArray(\"rf%=\");\r\n}", "{\r\n    String[] stringArray0 = new String[7];\r\n    Base64.main(stringArray0);\r\n}", "{\r\n    // Undeclared exception!\r\n    try {\r\n        Base64.base64ToByteArray(\"L)rK``A-mu23v!y\");\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // String length must be a multiple of four.\r\n        // \r\n        verifyException(\"com.hf.sfm.crypt.Base64\", e);\r\n    }\r\n}", "{\r\n    byte[] byteArray0 = new byte[0];\r\n    String string0 = Base64.byteArrayToAltBase64(byteArray0);\r\n}", "{\r\n    byte[] byteArray0 = Base64.base64ToByteArray(\"amPk\");\r\n}", "{\r\n    // Undeclared exception!\r\n    try {\r\n        Base64.base64ToByteArray(\"rf%=\");\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // Illegal character %\r\n        // \r\n        verifyException(\"com.hf.sfm.crypt.Base64\", e);\r\n    }\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "com.hf.sfm.crypt.Base64", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.hf.sfm.util.DataSource" : {
      "sequences" : [ "{\r\n    DataSource dataSource0 = new DataSource();\r\n    FakeHttpSession fakeHttpSession0 = new FakeHttpSession(\",\\nqueryValue:\");\r\n    String string0 = dataSource0.getSession(fakeHttpSession0, \",\\nqueryValue:\");\r\n}", "{\r\n    String[] stringArray0 = new String[8];\r\n    // Undeclared exception!\r\n    try {\r\n        DataSource.main(stringArray0);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"com.hf.sfm.util.Loader\", e);\r\n    }\r\n}", "{\r\n    DataSource dataSource0 = new DataSource();\r\n    BasePara basePara0 = new BasePara();\r\n    // Undeclared exception!\r\n    try {\r\n        dataSource0.getPlanarArrData(basePara0);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"com.hf.sfm.util.Loader\", e);\r\n    }\r\n}", "{\r\n    DataSource dataSource0 = new DataSource();\r\n    BasePara basePara0 = new BasePara();\r\n    // Undeclared exception!\r\n    try {\r\n        dataSource0.getGridData(basePara0);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"com.hf.sfm.util.Loader\", e);\r\n    }\r\n}", "{\r\n    DataSource dataSource0 = new DataSource();\r\n    BasePara basePara0 = new BasePara();\r\n    // Undeclared exception!\r\n    try {\r\n        dataSource0.getComboData(basePara0);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"com.hf.sfm.util.Loader\", e);\r\n    }\r\n}" ],
      "imports" : [ "com.hf.sfm.util.BasePara", "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.directwebremoting.util.FakeHttpSession", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals", "com.hf.sfm.util.DataSource" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.hf.sfm.sfmis.personinfo.pdo.APersonInfo" : {
      "sequences" : [ "{\r\n    APersonInfo aPersonInfo0 = new APersonInfo((String) null, \"l\", (Date) null, \"SQJNz-`X?tA<@ce'b}\", (Date) null, \"l\", (Date) null, (String) null, \"[OHo/\\u0012t}\", \"\");\r\n    Date date0 = aPersonInfo0.getIndate();\r\n}", "{\r\n    APersonInfo aPersonInfo0 = new APersonInfo();\r\n    String string0 = aPersonInfo0.getReason();\r\n}", "{\r\n    APersonInfo aPersonInfo0 = new APersonInfo((String) null, \"l\", (Date) null, \"SQJNz-`X?tA<@ce'b}\", (Date) null, \"l\", (Date) null, (String) null, \"[OHo/\\u0012t}\", \"\");\r\n    aPersonInfo0.setIndate((Date) null);\r\n}", "{\r\n    APersonInfo aPersonInfo0 = new APersonInfo();\r\n    aPersonInfo0.setSex(\"com.hf.sfm.sfmis.personinfo.pdo.APersonInfo\");\r\n}", "{\r\n    APersonInfo aPersonInfo0 = new APersonInfo();\r\n    aPersonInfo0.setPersonid(\"@v=`:5q]e6k/\");\r\n}", "{\r\n    APersonInfo aPersonInfo0 = new APersonInfo();\r\n    String string0 = aPersonInfo0.getWbm();\r\n}", "{\r\n    APersonInfo aPersonInfo0 = new APersonInfo();\r\n    String string0 = aPersonInfo0.getName();\r\n}", "{\r\n    APersonInfo aPersonInfo0 = new APersonInfo();\r\n    Date date0 = aPersonInfo0.getBirthday();\r\n}", "{\r\n    APersonInfo aPersonInfo0 = new APersonInfo();\r\n    String string0 = aPersonInfo0.getPersontype();\r\n}", "{\r\n    APersonInfo aPersonInfo0 = new APersonInfo();\r\n    aPersonInfo0.setDepartment(\"WJoFbD<Kx7gTeW}}EE\");\r\n}", "{\r\n    APersonInfo aPersonInfo0 = new APersonInfo((String) null, \"l\", (Date) null, \"SQJNz-`X?tA<@ce'b}\", (Date) null, \"l\", (Date) null, (String) null, \"[OHo/\\u0012t}\", \"\");\r\n    aPersonInfo0.setOutdate((Date) null);\r\n}", "{\r\n    APersonInfo aPersonInfo0 = new APersonInfo();\r\n    aPersonInfo0.setPym((String) null);\r\n}", "{\r\n    APersonInfo aPersonInfo0 = new APersonInfo();\r\n    String string0 = aPersonInfo0.getMobile();\r\n}", "{\r\n    APersonInfo aPersonInfo0 = new APersonInfo();\r\n    aPersonInfo0.setName(\"B5v2cZy!s~?H=X\");\r\n}", "{\r\n    APersonInfo aPersonInfo0 = new APersonInfo();\r\n    Date date0 = aPersonInfo0.getOutdate();\r\n}", "{\r\n    APersonInfo aPersonInfo0 = new APersonInfo((String) null, \"l\", (Date) null, \"SQJNz-`X?tA<@ce'b}\", (Date) null, \"l\", (Date) null, (String) null, \"[OHo/\\u0012t}\", \"\");\r\n    aPersonInfo0.setWbm(\"org.jboss.util.file.FilenamePrefixFilter\");\r\n}", "{\r\n    APersonInfo aPersonInfo0 = new APersonInfo();\r\n    String string0 = aPersonInfo0.getPersonid();\r\n}", "{\r\n    APersonInfo aPersonInfo0 = new APersonInfo();\r\n    String string0 = aPersonInfo0.getPym();\r\n}", "{\r\n    APersonInfo aPersonInfo0 = new APersonInfo();\r\n    aPersonInfo0.setPersontype(\"\");\r\n}", "{\r\n    APersonInfo aPersonInfo0 = new APersonInfo();\r\n    aPersonInfo0.setMobile(\"!eFPz&\");\r\n}", "{\r\n    APersonInfo aPersonInfo0 = new APersonInfo();\r\n    aPersonInfo0.setReason(\"org.jboss.util.file.FilenameSuffixFilter\");\r\n}", "{\r\n    APersonInfo aPersonInfo0 = new APersonInfo();\r\n    String string0 = aPersonInfo0.getSex();\r\n}", "{\r\n    APersonInfo aPersonInfo0 = new APersonInfo();\r\n    String string0 = aPersonInfo0.getDepartment();\r\n}", "{\r\n    APersonInfo aPersonInfo0 = new APersonInfo();\r\n    aPersonInfo0.setBirthday((Date) null);\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "java.util.Date", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals", "com.hf.sfm.sfmis.personinfo.pdo.APersonInfo" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.hf.sfm.system.business.MenuManage" : {
      "sequences" : [ "{\r\n    MenuManage menuManage0 = new MenuManage();\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals", "com.hf.sfm.system.business.MenuManage" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.hf.sfm.system.pdo.AGroup" : {
      "sequences" : [ "{\r\n    AGroup aGroup0 = new AGroup(\"Z)W\", \"Qi{S'a\");\r\n    aGroup0.setName(\"Z)W\");\r\n}", "{\r\n    AGroup aGroup0 = new AGroup(\"Z)W\", \"Qi{S'a\");\r\n    aGroup0.setIdno(\"Z)W\");\r\n}", "{\r\n    AGroup aGroup0 = new AGroup(\"Z)W\", \"Qi{S'a\");\r\n    String string0 = aGroup0.getIdno();\r\n}", "{\r\n    AGroup aGroup0 = new AGroup(\"Z)W\", \"Qi{S'a\");\r\n    aGroup0.setMark(\"\");\r\n}", "{\r\n    AGroup aGroup0 = new AGroup();\r\n}", "{\r\n    AGroup aGroup0 = new AGroup(\"Z)W\", \"Qi{S'a\");\r\n    String string0 = aGroup0.getMark();\r\n}", "{\r\n    AGroup aGroup0 = new AGroup(\"Z)W\", \"Qi{S'a\");\r\n    String string0 = aGroup0.getName();\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals", "com.hf.sfm.system.pdo.AGroup" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.hf.sfm.sfmis.department.pdo.ADepartment" : {
      "sequences" : [ "{\r\n    ADepartment aDepartment0 = new ADepartment(\"%F<CnkJLX\", \"%F<CnkJLX\");\r\n    String string0 = aDepartment0.getName();\r\n}", "{\r\n    ADepartment aDepartment0 = new ADepartment();\r\n    String string0 = aDepartment0.getIdno();\r\n}", "{\r\n    ADepartment aDepartment0 = new ADepartment();\r\n    aDepartment0.setMark((String) null);\r\n}", "{\r\n    ADepartment aDepartment0 = new ADepartment();\r\n    aDepartment0.setName(\"\");\r\n}", "{\r\n    ADepartment aDepartment0 = new ADepartment();\r\n    aDepartment0.setIdno(\"\");\r\n}", "{\r\n    ADepartment aDepartment0 = new ADepartment();\r\n    String string0 = aDepartment0.getMark();\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals", "com.hf.sfm.sfmis.department.pdo.ADepartment" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.hf.sfm.util.DaoFactory" : {
      "sequences" : [ "{\r\n    DaoFactory daoFactory0 = new DaoFactory();\r\n    String string0 = daoFactory0.encrypt(\"N]+%]A*?DpgNsUy8m\");\r\n    // Undeclared exception!\r\n    try {\r\n        daoFactory0.rollback();\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"com.hf.sfm.util.DaoFactory\", e);\r\n    }\r\n}", "{\r\n    DaoFactory daoFactory0 = new DaoFactory();\r\n    Object object0 = null;\r\n    // Undeclared exception!\r\n    try {\r\n        daoFactory0.update((Object) null);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"com.hf.sfm.util.DaoFactory\", e);\r\n    }\r\n}", "{\r\n    DaoFactory daoFactory0 = new DaoFactory();\r\n    Integer integer0 = new Integer(2911);\r\n    Integer integer1 = Integer.getInteger(\"gN&`3|z#0GFm\", integer0);\r\n    // Undeclared exception!\r\n    try {\r\n        daoFactory0.save(integer1);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"com.hf.sfm.util.DaoFactory\", e);\r\n    }\r\n}", "{\r\n    DaoFactory daoFactory0 = new DaoFactory();\r\n    daoFactory0.closeSession();\r\n    // Undeclared exception!\r\n    try {\r\n        daoFactory0.beginTransaction();\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"com.hf.sfm.util.HibernateSessionFactory\", e);\r\n    }\r\n}", "{\r\n    DaoFactory daoFactory0 = new DaoFactory();\r\n    // Undeclared exception!\r\n    try {\r\n        daoFactory0.commit();\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"com.hf.sfm.util.DaoFactory\", e);\r\n    }\r\n}", "{\r\n    DaoFactory daoFactory0 = new DaoFactory();\r\n    daoFactory0.closeAll();\r\n    // Undeclared exception!\r\n    try {\r\n        daoFactory0.decrypt((String) null);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"com.hf.sfm.crypt.Base64\", e);\r\n    }\r\n}", "{\r\n    DaoFactory daoFactory0 = new DaoFactory();\r\n    ColumnNameCache columnNameCache0 = new ColumnNameCache(0);\r\n    ResultSetWrapper resultSetWrapper0 = new ResultSetWrapper((ResultSet) null, columnNameCache0);\r\n    daoFactory0.rs = (ResultSet) resultSetWrapper0;\r\n    // Undeclared exception!\r\n    try {\r\n        daoFactory0.closeAll();\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"org.hibernate.jdbc.ResultSetWrapper\", e);\r\n    }\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "java.sql.ResultSet", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "org.hibernate.jdbc.ResultSetWrapper", "static org.junit.Assert.*", "org.hibernate.jdbc.ColumnNameCache", "static org.junit.Assert.assertEquals", "com.hf.sfm.util.DaoFactory" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.hf.sfm.system.business.WorkerMgr" : {
      "sequences" : [ "{\r\n    WorkerMgr workerMgr0 = new WorkerMgr();\r\n}" ],
      "imports" : [ "com.hf.sfm.system.business.WorkerMgr", "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.hf.sfm.util.ListRange" : {
      "sequences" : [ "{\r\n    ListRange listRange0 = new ListRange();\r\n    listRange0.setData((ArrayList<Object>) null);\r\n}", "{\r\n    ListRange listRange0 = new ListRange();\r\n    listRange0.setTotalSize((-1340));\r\n}", "{\r\n    ListRange listRange0 = new ListRange();\r\n    int int0 = listRange0.getTotalSize();\r\n}", "{\r\n    ListRange listRange0 = new ListRange();\r\n    ArrayList<Object> arrayList0 = listRange0.getData();\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "com.hf.sfm.util.ListRange", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals", "java.util.ArrayList" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.hf.sfm.util.Loader" : {
      "sequences" : [ "{\r\n    Loader loader0 = new Loader();\r\n    SessionImplementor sessionImplementor0 = mock(SessionImplementor.class, new ViolatedAssumptionAnswer());\r\n    LinkedHashSet<BeanElement> linkedHashSet0 = new LinkedHashSet<BeanElement>();\r\n    PersistentIdentifierBag persistentIdentifierBag0 = new PersistentIdentifierBag(sessionImplementor0, linkedHashSet0);\r\n    loader0.setRs(persistentIdentifierBag0);\r\n    String string0 = loader0.getArrayResults();\r\n}", "{\r\n    Loader loader0 = new Loader();\r\n    ListRange listRange0 = loader0.getRange();\r\n}", "{\r\n    Loader loader0 = new Loader();\r\n    ListRange listRange0 = new ListRange();\r\n    loader0.setRange(listRange0);\r\n}", "{\r\n    Loader loader0 = new Loader();\r\n    String[] stringArray0 = new String[2];\r\n    stringArray0[0] = \"sqlfolder/\";\r\n    stringArray0[1] = \"$_pr{I>$|4P5\";\r\n    SessionImplementor sessionImplementor0 = mock(SessionImplementor.class, new ViolatedAssumptionAnswer());\r\n    CollectionFilterImpl collectionFilterImpl0 = new CollectionFilterImpl(\"sqlfolder/\", \"sqlfolder/\", sessionImplementor0, (ParameterMetadata) null);\r\n    String[][] stringArray1 = new String[4][2];\r\n    stringArray1[1] = stringArray0;\r\n    Query query0 = loader0.getParams(collectionFilterImpl0, stringArray1);\r\n}", "{\r\n    Loader loader0 = new Loader();\r\n    PriorityBlockingQueue<DOMElement> priorityBlockingQueue0 = new PriorityBlockingQueue<DOMElement>();\r\n    PersistentIdentifierBag persistentIdentifierBag0 = new PersistentIdentifierBag((SessionImplementor) null, priorityBlockingQueue0);\r\n    loader0.setRs(persistentIdentifierBag0);\r\n    loader0.collectToMap(\"org.hibernate.event.InitializeCollectionEventListener\");\r\n}", "{\r\n    Loader loader0 = new Loader();\r\n    Namespace namespace0 = Namespace.NO_NAMESPACE;\r\n    QName qName0 = QName.get(\"q\", namespace0, \"q\");\r\n    NonLazyElement nonLazyElement0 = new NonLazyElement(\"th*7bBy;aF@usL&\");\r\n    BeanElement beanElement0 = new BeanElement(qName0, nonLazyElement0);\r\n    BeanAttributeList beanAttributeList0 = new BeanAttributeList(beanElement0);\r\n    loader0.setRs(beanAttributeList0);\r\n    // Undeclared exception!\r\n    try {\r\n        loader0.getArrayResults();\r\n    } catch (ClassCastException e) {\r\n        // \r\n        // org.dom4j.bean.BeanAttribute cannot be cast to [Ljava.lang.Object;\r\n        // \r\n        verifyException(\"com.hf.sfm.util.Loader\", e);\r\n    }\r\n}", "{\r\n    Loader loader0 = new Loader();\r\n    QName qName0 = new QName(\"x^SaU&!.\");\r\n    String[] stringArray0 = new String[4];\r\n    loader0.setColNames(stringArray0);\r\n    Object object0 = new Object();\r\n    BeanElement beanElement0 = new BeanElement(qName0, object0);\r\n    BeanAttributeList beanAttributeList0 = new BeanAttributeList(beanElement0);\r\n    loader0.setRs(beanAttributeList0);\r\n    // Undeclared exception!\r\n    try {\r\n        loader0.collectToMap(\"x^SaU&!.\");\r\n    } catch (ClassCastException e) {\r\n        // \r\n        // org.dom4j.bean.BeanAttribute cannot be cast to [Ljava.lang.Object;\r\n        // \r\n        verifyException(\"com.hf.sfm.util.Loader\", e);\r\n    }\r\n}", "{\r\n    Loader loader0 = new Loader();\r\n    QName qName0 = QName.get(\"x^SaU&!.\");\r\n    Object object0 = new Object();\r\n    BeanElement beanElement0 = new BeanElement(qName0, object0);\r\n    String[] stringArray0 = new String[1];\r\n    loader0.setColNames(stringArray0);\r\n    BeanAttributeList beanAttributeList0 = new BeanAttributeList(beanElement0);\r\n    loader0.setRs(beanAttributeList0);\r\n    loader0.collectToMap(\"x^SaU&!.\");\r\n}", "{\r\n    Loader loader0 = new Loader();\r\n    BasePara basePara0 = new BasePara();\r\n    basePara0.setPaging(true);\r\n    // Undeclared exception!\r\n    try {\r\n        loader0.run(basePara0);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"com.hf.sfm.util.Loader\", e);\r\n    }\r\n}", "{\r\n    Loader loader0 = new Loader();\r\n    String[] stringArray0 = new String[6];\r\n    stringArray0[0] = \"Integer\";\r\n    CompositeName compositeName0 = new CompositeName();\r\n    SessionImplementor sessionImplementor0 = mock(SessionImplementor.class, new ViolatedAssumptionAnswer());\r\n    CollectionFilterImpl collectionFilterImpl0 = new CollectionFilterImpl(\"TU%6([&m:>IcY\", compositeName0, sessionImplementor0, (ParameterMetadata) null);\r\n    String[][] stringArray1 = new String[3][1];\r\n    stringArray1[1] = stringArray0;\r\n    // Undeclared exception!\r\n    try {\r\n        loader0.getParams(collectionFilterImpl0, stringArray1);\r\n    } catch (NumberFormatException e) {\r\n        // \r\n        // null\r\n        // \r\n        verifyException(\"java.lang.Integer\", e);\r\n    }\r\n}", "{\r\n    Loader loader0 = new Loader();\r\n    BasePara basePara0 = new BasePara();\r\n    basePara0.setSqlpath(\"&Cs\");\r\n    // Undeclared exception!\r\n    try {\r\n        loader0.run(basePara0);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"com.hf.sfm.util.Loader\", e);\r\n    }\r\n}", "{\r\n    Loader loader0 = new Loader();\r\n    Query query0 = loader0.getParams((Query) null, (String[][]) null);\r\n}", "{\r\n    Loader loader0 = new Loader();\r\n    String[][] stringArray0 = new String[6][1];\r\n    String[] stringArray1 = new String[20];\r\n    stringArray0[0] = stringArray1;\r\n    String[] stringArray2 = new String[8];\r\n    stringArray2[0] = \"*CR&d2F&[WKJQPJ*\";\r\n    stringArray2[1] = \"~r_biw6\";\r\n    stringArray2[2] = \"Date\";\r\n    stringArray0[1] = stringArray2;\r\n    // Undeclared exception!\r\n    try {\r\n        loader0.getParams((Query) null, stringArray0);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"java.text.SimpleDateFormat\", e);\r\n    }\r\n}", "{\r\n    Loader loader0 = new Loader();\r\n    loader0.setTotalCount((-117));\r\n}", "{\r\n    Loader loader0 = new Loader();\r\n    String[][] stringArray0 = new String[6][1];\r\n    String[] stringArray1 = new String[8];\r\n    stringArray1[0] = \"Long\";\r\n    stringArray0[1] = stringArray1;\r\n    // Undeclared exception!\r\n    try {\r\n        loader0.getParams((Query) null, stringArray0);\r\n    } catch (NumberFormatException e) {\r\n        // \r\n        // null\r\n        // \r\n        verifyException(\"java.lang.Long\", e);\r\n    }\r\n}", "{\r\n    Loader loader0 = new Loader();\r\n    BasePara basePara0 = new BasePara();\r\n    basePara0.setSqlpath(\"%p5!,@mR)$9qkIzd$G\");\r\n    basePara0.setQuerySql(\"%p5!,@mR)$9qkIzd$G\");\r\n    // Undeclared exception!\r\n    try {\r\n        loader0.run(basePara0);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"com.hf.sfm.util.Loader\", e);\r\n    }\r\n}", "{\r\n    Loader loader0 = new Loader();\r\n    // Undeclared exception!\r\n    try {\r\n        loader0.collectToMap();\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"com.hf.sfm.util.Loader\", e);\r\n    }\r\n}", "{\r\n    Loader loader0 = new Loader();\r\n    String[][] stringArray0 = new String[8][5];\r\n    String[] stringArray1 = new String[2];\r\n    stringArray1[0] = \"String\";\r\n    stringArray0[1] = stringArray1;\r\n    // Undeclared exception!\r\n    try {\r\n        loader0.getParams((Query) null, stringArray0);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"com.hf.sfm.util.Loader\", e);\r\n    }\r\n}", "{\r\n    Loader loader0 = new Loader();\r\n    // Undeclared exception!\r\n    try {\r\n        loader0.collectToMap(\"combo\");\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"com.hf.sfm.util.Loader\", e);\r\n    }\r\n}", "{\r\n    Loader loader0 = new Loader();\r\n    String[][] stringArray0 = new String[6][6];\r\n    String[] stringArray1 = new String[8];\r\n    stringArray1[0] = \"0IA*$\";\r\n    stringArray1[1] = \"b}$q$nT*n\\\"QaplKBZ\";\r\n    stringArray1[2] = \"<\";\r\n    stringArray1[3] = \"MysqlIO.SlowQuery\";\r\n    stringArray1[4] = \"Double\";\r\n    stringArray0[1] = stringArray1;\r\n    // Undeclared exception!\r\n    try {\r\n        loader0.getParams((Query) null, stringArray0);\r\n    } catch (NullPointerException e) {\r\n    }\r\n}" ],
      "imports" : [ "com.hf.sfm.util.BasePara", "static org.junit.Assert.assertNull", "org.dom4j.bean.BeanAttributeList", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "java.util.concurrent.PriorityBlockingQueue", "com.hf.sfm.util.ListRange", "org.evosuite.runtime.EvoRunner", "org.hibernate.Query", "com.hf.sfm.util.Loader", "org.hibernate.engine.SessionImplementor", "static org.junit.Assert.assertEquals", "org.dom4j.dom.DOMElement", "java.util.LinkedHashSet", "javax.naming.CompositeName", "org.dom4j.bean.BeanElement", "org.hibernate.impl.CollectionFilterImpl", "org.dom4j.Namespace", "org.junit.Test", "static org.junit.Assert.*", "org.hibernate.engine.query.ParameterMetadata", "org.dom4j.util.NonLazyElement", "org.hibernate.collection.PersistentIdentifierBag", "static org.evosuite.shaded.org.mockito.Mockito.*", "org.evosuite.runtime.EvoRunnerParameters", "org.dom4j.QName", "org.evosuite.runtime.ViolatedAssumptionAnswer" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.hf.sfm.util.OddParamsOfArrayInLoader" : {
      "sequences" : [ "{\r\n    OddParamsOfArrayInLoader oddParamsOfArrayInLoader0 = new OddParamsOfArrayInLoader();\r\n    OddParamsOfArrayInLoader oddParamsOfArrayInLoader1 = new OddParamsOfArrayInLoader(oddParamsOfArrayInLoader0);\r\n}", "{\r\n    OddParamsOfArrayInLoader oddParamsOfArrayInLoader0 = new OddParamsOfArrayInLoader();\r\n    OddParamsOfArrayInLoader oddParamsOfArrayInLoader1 = new OddParamsOfArrayInLoader(\"org.apache.oro.io.GlobFilenameFilter\", oddParamsOfArrayInLoader0);\r\n}", "{\r\n    OddParamsOfArrayInLoader oddParamsOfArrayInLoader0 = new OddParamsOfArrayInLoader(\"org.apache.oro.io.GlobFilenameFilter\");\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "com.hf.sfm.util.OddParamsOfArrayInLoader", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.hf.sfm.filter.setCharacterEncodingFilter" : {
      "sequences" : [ "{\r\n    setCharacterEncodingFilter setCharacterEncodingFilter0 = new setCharacterEncodingFilter();\r\n    FilterConfig filterConfig0 = mock(FilterConfig.class, new ViolatedAssumptionAnswer());\r\n    setCharacterEncodingFilter0.init(filterConfig0);\r\n}", "{\r\n    setCharacterEncodingFilter setCharacterEncodingFilter0 = new setCharacterEncodingFilter();\r\n    setCharacterEncodingFilter0.destroy();\r\n}", "{\r\n    setCharacterEncodingFilter setCharacterEncodingFilter0 = new setCharacterEncodingFilter();\r\n    ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());\r\n    ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);\r\n    FilterChain filterChain0 = mock(FilterChain.class, new ViolatedAssumptionAnswer());\r\n    setCharacterEncodingFilter0.doFilter(servletRequestWrapper0, (ServletResponse) null, filterChain0);\r\n}" ],
      "imports" : [ "javax.servlet.FilterChain", "javax.servlet.ServletRequest", "static org.junit.Assert.assertNull", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.evosuite.shaded.org.mockito.Mockito.*", "org.evosuite.runtime.EvoRunnerParameters", "javax.servlet.ServletResponse", "org.evosuite.runtime.EvoRunner", "javax.servlet.FilterConfig", "org.evosuite.runtime.ViolatedAssumptionAnswer", "static org.junit.Assert.assertEquals", "javax.servlet.ServletRequestWrapper", "com.hf.sfm.filter.setCharacterEncodingFilter" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    }
  },
  "test_generation_tool" : "EvoSuiteTestGenerator"
}
{
  "test_sequences" : {
    "glengineer.agents.settings.ContainerGapSettings" : {
      "sequences" : [ "{\r\n    SpecialGapSizes specialGapSizes0 = new SpecialGapSizes();\r\n    ContainerGapSettings containerGapSettings0 = new ContainerGapSettings(specialGapSizes0);\r\n}", "{\r\n    ContainerGapSettings containerGapSettings0 = new ContainerGapSettings();\r\n}", "{\r\n    ContainerGapSettings containerGapSettings0 = new ContainerGapSettings(0, 1466);\r\n}" ],
      "imports" : [ "glengineer.agents.settings.ContainerGapSettings", "static org.junit.Assert.assertNull", "glengineer.agents.settings.SpecialGapSizes", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.agents.SequentialGroupAgent" : {
      "sequences" : [ "{\r\n    LayoutStyle.ComponentPlacement layoutStyle_ComponentPlacement0 = LayoutStyle.ComponentPlacement.UNRELATED;\r\n    PreferredGapAgent preferredGapAgent0 = new PreferredGapAgent(layoutStyle_ComponentPlacement0);\r\n    SequentialGroupAgent sequentialGroupAgent0 = new SequentialGroupAgent();\r\n    sequentialGroupAgent0.addPreferredGapAfter(preferredGapAgent0, preferredGapAgent0);\r\n    // Undeclared exception!\r\n    try {\r\n        sequentialGroupAgent0.addPreferredGapAfter(preferredGapAgent0, preferredGapAgent0);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // the UNRELATED gap in the sequential group <null,null> not found\r\n        // \r\n        verifyException(\"glengineer.agents.SequentialGroupAgent\", e);\r\n    }\r\n}", "{\r\n    SequentialGroupAgent sequentialGroupAgent0 = new SequentialGroupAgent();\r\n    LayoutStyle.ComponentPlacement layoutStyle_ComponentPlacement0 = LayoutStyle.ComponentPlacement.INDENT;\r\n    PreferredGapAgent preferredGapAgent0 = new PreferredGapAgent(layoutStyle_ComponentPlacement0, 1, 1);\r\n    sequentialGroupAgent0.addPreferredGapAfter(preferredGapAgent0, preferredGapAgent0);\r\n    // Undeclared exception!\r\n    try {\r\n        sequentialGroupAgent0.addPreferredGapBefore(preferredGapAgent0, preferredGapAgent0);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // the INDENT gap in the sequential group <null,null> not found\r\n        // \r\n        verifyException(\"glengineer.agents.SequentialGroupAgent\", e);\r\n    }\r\n}", "{\r\n    SequentialGroupAgent sequentialGroupAgent0 = new SequentialGroupAgent();\r\n    FunctionsOnSequentialGroup functionsOnSequentialGroup0 = sequentialGroupAgent0.getFunctionsOnSequentialGroupImplemenation();\r\n    // Undeclared exception!\r\n    try {\r\n        functionsOnSequentialGroup0.getGroup(\"sequential group <null,null>\", \"Ay}m*0R-2+ sOB,J\");\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // the group <sequential group <null,null>,Ay}m*0R-2+ sOB,J> in the sequential group <null,null> not found\r\n        // \r\n        verifyException(\"glengineer.agents.GroupAgent\", e);\r\n    }\r\n}", "{\r\n    SequentialGroupAgent sequentialGroupAgent0 = new SequentialGroupAgent();\r\n    GroupCreatorAndElementAdder groupCreatorAndElementAdder0 = mock(GroupCreatorAndElementAdder.class, new ViolatedAssumptionAnswer());\r\n    doReturn((GroupLayout.SequentialGroup) null).when(groupCreatorAndElementAdder0).createSequentialGroup();\r\n    GroupLayout.SequentialGroup groupLayout_SequentialGroup0 = sequentialGroupAgent0.groupContent(groupCreatorAndElementAdder0);\r\n}", "{\r\n    SequentialGroupAgent sequentialGroupAgent0 = new SequentialGroupAgent();\r\n    LayoutStyle.ComponentPlacement layoutStyle_ComponentPlacement0 = LayoutStyle.ComponentPlacement.INDENT;\r\n    PreferredGapAgent preferredGapAgent0 = new PreferredGapAgent(layoutStyle_ComponentPlacement0, (-1), (-1));\r\n    sequentialGroupAgent0.addPreferredGapBefore(preferredGapAgent0, preferredGapAgent0);\r\n}", "{\r\n    SequentialGroupAgent sequentialGroupAgent0 = new SequentialGroupAgent();\r\n    GroupCreatorAndElementAdder groupCreatorAndElementAdder0 = mock(GroupCreatorAndElementAdder.class, new ViolatedAssumptionAnswer());\r\n    doReturn((GroupLayout.SequentialGroup) null).when(groupCreatorAndElementAdder0).createSequentialGroup();\r\n    GapAgent gapAgent0 = new GapAgent();\r\n    sequentialGroupAgent0.addGapAfter(gapAgent0, gapAgent0);\r\n    // Undeclared exception!\r\n    try {\r\n        sequentialGroupAgent0.groupContent(groupCreatorAndElementAdder0);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"glengineer.agents.GapAgent\", e);\r\n    }\r\n}", "{\r\n    SequentialGroupAgent sequentialGroupAgent0 = new SequentialGroupAgent();\r\n    SequentialGroupAgent.FunctionsOnSequentialGroupImplemenation sequentialGroupAgent_FunctionsOnSequentialGroupImplemenation0 = (SequentialGroupAgent.FunctionsOnSequentialGroupImplemenation) sequentialGroupAgent0.getFunctionsOnGroupImplemenation();\r\n    // Undeclared exception!\r\n    try {\r\n        sequentialGroupAgent_FunctionsOnSequentialGroupImplemenation0.getComponent(\"#C!#Rxyh<8r\");\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // component #C!#Rxyh<8r in the sequential group <null,null> not found\r\n        // \r\n        verifyException(\"glengineer.agents.GroupAgent\", e);\r\n    }\r\n}" ],
      "imports" : [ "glengineer.agents.GroupCreatorAndElementAdder", "static org.junit.Assert.assertNull", "glengineer.agents.PreferredGapAgent", "glengineer.agents.SequentialGroupAgent", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "glengineer.agents.GapAgent", "javax.swing.LayoutStyle", "static org.evosuite.shaded.org.mockito.Mockito.*", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "javax.swing.GroupLayout", "org.evosuite.runtime.ViolatedAssumptionAnswer", "static org.junit.Assert.assertEquals", "glengineer.agents.setters.FunctionsOnSequentialGroup" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.positions.WordPosition" : {
      "sequences" : [ "{\r\n    VWordPosition vWordPosition0 = new VWordPosition(0, 0, 1077);\r\n    CharPosition2 charPosition2_0 = vWordPosition0.getEnd();\r\n    boolean boolean0 = vWordPosition0.contains((CharPosition) charPosition2_0);\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "glengineer.positions.CharPosition2", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals", "glengineer.positions.VWordPosition", "glengineer.positions.CharPosition" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.positions.VWordPosition" : {
      "sequences" : [ "{\r\n    CharPosition charPosition0 = new CharPosition((-4), (-4));\r\n    VWordPosition vWordPosition0 = new VWordPosition(charPosition0);\r\n    VWordPosition vWordPosition1 = new VWordPosition(256, (-4), (-4));\r\n    int int0 = vWordPosition0.compareTo(vWordPosition1);\r\n}", "{\r\n    VWordPosition vWordPosition0 = new VWordPosition(0, 0, 0);\r\n    VWordPosition vWordPosition1 = new VWordPosition(0, (-417), 0);\r\n    boolean boolean0 = vWordPosition0.equals((WordPosition) vWordPosition1);\r\n}", "{\r\n    CharPosition charPosition0 = new CharPosition(1, 1);\r\n    VWordPosition vWordPosition0 = new VWordPosition(charPosition0, 1);\r\n    // Undeclared exception!\r\n    try {\r\n        vWordPosition0.getLengthInsideOf((Block) null);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"glengineer.positions.VWordPosition\", e);\r\n    }\r\n}", "{\r\n    VWordPosition vWordPosition0 = new VWordPosition(0, 0, 27);\r\n    CharPosition2 charPosition2_0 = vWordPosition0.getEnd();\r\n    boolean boolean0 = vWordPosition0.contains((CharPosition) charPosition2_0);\r\n}", "{\r\n    CharPosition1 charPosition1_0 = new CharPosition1(0, (-3460));\r\n    VWordPosition vWordPosition0 = null;\r\n    try {\r\n        vWordPosition0 = new VWordPosition(124, charPosition1_0);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // wrong word position parameters\r\n        // \r\n        verifyException(\"glengineer.positions.VWordPosition\", e);\r\n    }\r\n}", "{\r\n    VWordPosition vWordPosition0 = new VWordPosition(1066, 563, 1066);\r\n    // Undeclared exception!\r\n    try {\r\n        vWordPosition0.textAt((CharTable) null);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"glengineer.positions.VWordPosition\", e);\r\n    }\r\n}", "{\r\n    CharPosition charPosition0 = new CharPosition(124, 124);\r\n    VWordPosition vWordPosition0 = new VWordPosition(charPosition0);\r\n    int int0 = vWordPosition0.getHeight();\r\n}", "{\r\n    VWordPosition vWordPosition0 = new VWordPosition(0, 0, 27);\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"e\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0, 0, 0, 1, 0);\r\n    boolean boolean0 = vWordPosition0.intersects(horizontalBlock0);\r\n}", "{\r\n    VWordPosition vWordPosition0 = new VWordPosition((-6), (-6), (-6));\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"e\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0);\r\n    boolean boolean0 = vWordPosition0.intersects(horizontalBlock0);\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"e\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    VerticalBlock verticalBlock0 = new VerticalBlock(scheme0);\r\n    VWordPosition vWordPosition0 = new VWordPosition(verticalBlock0);\r\n}", "{\r\n    VWordPosition vWordPosition0 = new VWordPosition(0, 0, 0);\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    VerticalBlock verticalBlock0 = new VerticalBlock(scheme0, 0, 0, 0, 0);\r\n    boolean boolean0 = vWordPosition0.liesIn(verticalBlock0);\r\n}", "{\r\n    VWordPosition vWordPosition0 = new VWordPosition((-2335), (-2335), 3696);\r\n    CharPosition1 charPosition1_0 = vWordPosition0.getStart();\r\n    boolean boolean0 = vWordPosition0.contains((CharPosition) charPosition1_0);\r\n}", "{\r\n    VWordPosition vWordPosition0 = new VWordPosition(0, 0, 27);\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"e\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0, 0, 0, 1, 0);\r\n    boolean boolean0 = vWordPosition0.liesIn(horizontalBlock0);\r\n}", "{\r\n    VWordPosition vWordPosition0 = new VWordPosition((-2335), (-2335), 3696);\r\n    CharPosition1 charPosition1_0 = vWordPosition0.getStart();\r\n    VWordPosition vWordPosition1 = new VWordPosition(charPosition1_0);\r\n    boolean boolean0 = vWordPosition0.equals((WordPosition) vWordPosition1);\r\n}", "{\r\n    VWordPosition vWordPosition0 = new VWordPosition(0, 0, 0);\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"e\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0);\r\n    CharPosition1 charPosition1_0 = new CharPosition1(0, 1);\r\n    HorizontalBlock horizontalBlock1 = horizontalBlock0.cloneWith(charPosition1_0);\r\n    boolean boolean0 = vWordPosition0.liesIn(horizontalBlock1);\r\n}", "{\r\n    CharPosition1 charPosition1_0 = new CharPosition1(1, 1);\r\n    VWordPosition vWordPosition0 = new VWordPosition(charPosition1_0);\r\n    HWordPosition hWordPosition0 = new HWordPosition(charPosition1_0);\r\n    boolean boolean0 = vWordPosition0.equals((WordPosition) hWordPosition0);\r\n}", "{\r\n    VWordPosition vWordPosition0 = new VWordPosition(4, 32, 32);\r\n    boolean boolean0 = vWordPosition0.contains(2430, (-1704));\r\n}", "{\r\n    VWordPosition vWordPosition0 = new VWordPosition((-2335), (-2335), 3696);\r\n    int int0 = vWordPosition0.compareTo(vWordPosition0);\r\n}", "{\r\n    VWordPosition vWordPosition0 = new VWordPosition(4, 32, 32);\r\n    boolean boolean0 = vWordPosition0.isTrivial();\r\n}", "{\r\n    VWordPosition vWordPosition0 = new VWordPosition(0, 0, 0);\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"e\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    boolean boolean0 = vWordPosition0.liesIn(scheme0);\r\n}", "{\r\n    VWordPosition vWordPosition0 = new VWordPosition((-6), (-6), (-6));\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"e\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    boolean boolean0 = vWordPosition0.liesIn(scheme0);\r\n}", "{\r\n    VWordPosition vWordPosition0 = new VWordPosition((-2335), (-2335), 3696);\r\n    boolean boolean0 = vWordPosition0.equals((WordPosition) vWordPosition0);\r\n}", "{\r\n    CharPosition charPosition0 = new CharPosition((-4), (-4));\r\n    VWordPosition vWordPosition0 = new VWordPosition(charPosition0);\r\n    VWordPosition vWordPosition1 = new VWordPosition(256, (-4), (-4));\r\n    int int0 = vWordPosition1.compareTo(vWordPosition0);\r\n}", "{\r\n    VWordPosition vWordPosition0 = new VWordPosition(0, 0, 0);\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0);\r\n    boolean boolean0 = vWordPosition0.intersects(horizontalBlock0);\r\n}", "{\r\n    VWordPosition vWordPosition0 = new VWordPosition(0, 0, 0);\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"e\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0);\r\n    boolean boolean0 = vWordPosition0.intersects(horizontalBlock0);\r\n}", "{\r\n    VWordPosition vWordPosition0 = new VWordPosition(1, 1, 1);\r\n    boolean boolean0 = vWordPosition0.contains(1, (-1689));\r\n}", "{\r\n    VWordPosition vWordPosition0 = new VWordPosition(0, 0, 27);\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"e\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    boolean boolean0 = vWordPosition0.intersects(scheme0);\r\n}", "{\r\n    VWordPosition vWordPosition0 = new VWordPosition(0, 0, 867);\r\n    VWordPosition vWordPosition1 = new VWordPosition(867, (-417), 0);\r\n    boolean boolean0 = vWordPosition0.equals((WordPosition) vWordPosition1);\r\n}", "{\r\n    VWordPosition vWordPosition0 = new VWordPosition((-2335), (-2335), 3696);\r\n    String string0 = vWordPosition0.toString();\r\n}", "{\r\n    VWordPosition vWordPosition0 = new VWordPosition(0, 0, 27);\r\n    boolean boolean0 = vWordPosition0.isTrivial();\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "glengineer.blocks.Block", "glengineer.positions.HWordPosition", "glengineer.positions.WordPosition", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "glengineer.positions.VWordPosition", "glengineer.positions.CharPosition", "glengineer.blocks.CharTable", "glengineer.positions.CharPosition2", "org.evosuite.runtime.EvoRunnerParameters", "glengineer.positions.CharPosition1", "org.evosuite.runtime.EvoRunner", "glengineer.blocks.HorizontalBlock", "glengineer.blocks.Scheme", "static org.junit.Assert.assertEquals", "glengineer.blocks.VerticalBlock" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.positions.CharPosition" : {
      "sequences" : [ "{\r\n    CharPosition charPosition0 = new CharPosition(368, 0);\r\n    CharPosition charPosition1 = new CharPosition(368, 368);\r\n    boolean boolean0 = charPosition0.equals(charPosition1);\r\n}", "{\r\n    CharPosition charPosition0 = new CharPosition(368, 0);\r\n    boolean boolean0 = charPosition0.equals(charPosition0);\r\n}", "{\r\n    CharPosition charPosition0 = new CharPosition(2520, 1033);\r\n    CharPosition charPosition1 = new CharPosition(0, 2520);\r\n    boolean boolean0 = charPosition0.equals(charPosition1);\r\n}", "{\r\n    CharPosition charPosition0 = new CharPosition(0, 0);\r\n    String string0 = charPosition0.toString();\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals", "glengineer.positions.CharPosition" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.agents.settings.Sizes" : {
      "sequences" : [ "{\r\n    Sizes sizes0 = new Sizes();\r\n    String string0 = sizes0.toString();\r\n}", "{\r\n    Sizes sizes0 = new Sizes(1);\r\n}" ],
      "imports" : [ "glengineer.agents.settings.Sizes", "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.blocks.CharTable" : {
      "sequences" : [ "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_1234567890\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    CharPosition charPosition0 = new CharPosition(0, (-2089));\r\n    boolean boolean0 = scheme0.contains(charPosition0);\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_1234567890\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HWordPosition hWordPosition0 = scheme0.gapAt(52, 945);\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_1234567890\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0);\r\n    List<Block> list0 = horizontalBlock0.extractSequentialSubblocks();\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"ABCDEFGHIKLMNOPQRSTUVWXJZabcdeghijklmnopqrstuvwxyz_1234567890\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    CharPosition charPosition0 = new CharPosition(0, 1);\r\n    HWordPosition hWordPosition0 = new HWordPosition(charPosition0);\r\n    HWordPosition hWordPosition1 = scheme0.firstWordAfter_Vertically(hWordPosition0);\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_1234567890\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    VerticalBlock verticalBlock0 = new VerticalBlock(scheme0);\r\n    // Undeclared exception!\r\n    try {\r\n        verticalBlock0.splitterAt((-998), 46);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // char position (-998,46) out of block.\r\n        // Block(0,0, 63,1):\r\n        // ###################################################################\r\n        // # ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_1234567890 #\r\n        // ###################################################################\r\n        // \r\n        verifyException(\"glengineer.blocks.Block\", e);\r\n    }\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_1234567890\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0);\r\n    CharPosition charPosition0 = new CharPosition(0, (-2089));\r\n    VWordPosition vWordPosition0 = new VWordPosition(charPosition0);\r\n    String string0 = horizontalBlock0.textAt((WordPosition) vWordPosition0);\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_1234567890\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0);\r\n    HWordPosition hWordPosition0 = horizontalBlock0.lastWord_Horizontally();\r\n    CharPosition2 charPosition2_0 = hWordPosition0.getEnd();\r\n    boolean boolean0 = horizontalBlock0.contains((CharPosition) charPosition2_0);\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0);\r\n    HWordPosition hWordPosition0 = horizontalBlock0.lastWord_Horizontally();\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_1234567890\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0);\r\n    // Undeclared exception!\r\n    try {\r\n        horizontalBlock0.textAt((WordPosition) null);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // Null word position.\r\n        // \r\n        verifyException(\"glengineer.blocks.CharTable\", e);\r\n    }\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_1234567890\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0);\r\n    HWordPosition hWordPosition0 = new HWordPosition(horizontalBlock0);\r\n    HWordPosition hWordPosition1 = horizontalBlock0.firstWordAfter_Vertically(hWordPosition0);\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_1234567890\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HWordPosition hWordPosition0 = scheme0.gapAt((-2089), 0);\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_1234567890\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0);\r\n    HWordPosition hWordPosition0 = horizontalBlock0.firstWord_Vertically();\r\n}", "{\r\n    boolean boolean0 = CharTable.isWordChar('&');\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_1234567890\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HWordPosition hWordPosition0 = scheme0.firstWord_Horizontally();\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0);\r\n    HWordPosition hWordPosition1 = horizontalBlock0.firstWordAfter_Horizontally(hWordPosition0);\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    // Undeclared exception!\r\n    try {\r\n        scheme0.firstWordAfter_Vertically((HWordPosition) null);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // Can not search for the word following the null word.\r\n        // \r\n        verifyException(\"glengineer.blocks.CharTable\", e);\r\n    }\r\n}", "{\r\n    String[] stringArray0 = new String[2];\r\n    stringArray0[0] = \"\";\r\n    stringArray0[1] = \"\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    CharPosition2 charPosition2_0 = scheme0.getPos2();\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0);\r\n    // Undeclared exception!\r\n    try {\r\n        horizontalBlock0.charAt((CharPosition) charPosition2_0);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // char position (0,2) out of block.\r\n        // Block(0,0, 0,2):\r\n        // ####\r\n        // #  #\r\n        // #  #\r\n        // ####\r\n        // \r\n        verifyException(\"glengineer.blocks.Block\", e);\r\n    }\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_1234567890\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    VerticalBlock verticalBlock0 = new VerticalBlock(scheme0);\r\n    List<Block> list0 = verticalBlock0.extractSequentialSubblocks();\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HWordPosition hWordPosition0 = scheme0.firstWord_Vertically();\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_1234567890\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0);\r\n    VWordPosition vWordPosition0 = new VWordPosition(horizontalBlock0);\r\n    // Undeclared exception!\r\n    try {\r\n        horizontalBlock0.textAt(vWordPosition0);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // char position (0,1) out of block.\r\n        // Block(0,0, 63,1):\r\n        // ###################################################################\r\n        // # ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_1234567890 #\r\n        // ###################################################################\r\n        // \r\n        verifyException(\"glengineer.blocks.Block\", e);\r\n    }\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"b-apIFc'2\\\" \";\r\n    Scheme scheme0 = null;\r\n    try {\r\n        scheme0 = new Scheme(stringArray0);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // A wrong symbol ''' was found on the scheme under position (7,0)\r\n        // \r\n        verifyException(\"glengineer.blocks.Scheme\", e);\r\n    }\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    // Undeclared exception!\r\n    try {\r\n        scheme0.letterAt((-1), 0);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // char position out of table\r\n        // \r\n        verifyException(\"glengineer.blocks.Scheme\", e);\r\n    }\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "glengineer.blocks.Block", "glengineer.positions.HWordPosition", "glengineer.positions.WordPosition", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "glengineer.positions.VWordPosition", "glengineer.positions.CharPosition", "java.util.List", "glengineer.blocks.CharTable", "glengineer.positions.CharPosition2", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "glengineer.blocks.HorizontalBlock", "glengineer.blocks.Scheme", "static org.junit.Assert.assertEquals", "glengineer.blocks.VerticalBlock" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.blocks.HorizontalBlock" : {
      "sequences" : [ "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"cannot search in a trivial block\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0);\r\n    LinkedHashSet<HWordPosition> linkedHashSet0 = new LinkedHashSet<HWordPosition>(32, 1);\r\n    CharPosition2 charPosition2_0 = horizontalBlock0.getPos2();\r\n    HWordPosition hWordPosition0 = new HWordPosition(32, charPosition2_0);\r\n    boolean boolean0 = linkedHashSet0.add(hWordPosition0);\r\n    List<Block> list0 = horizontalBlock0.extractParallelSubblocksSeparatedByLines(linkedHashSet0);\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0);\r\n    List<Block> list0 = horizontalBlock0.extractParallelSubblocks();\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"s4\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0);\r\n    LinkedHashSet<HWordPosition> linkedHashSet0 = new LinkedHashSet<HWordPosition>();\r\n    CharPosition2 charPosition2_0 = horizontalBlock0.getPos2();\r\n    HWordPosition hWordPosition0 = new HWordPosition(2, charPosition2_0);\r\n    HWordPosition hWordPosition1 = horizontalBlock0.firstWord_Horizontally();\r\n    boolean boolean0 = linkedHashSet0.add(hWordPosition1);\r\n    boolean boolean1 = linkedHashSet0.add(hWordPosition0);\r\n    List<Block> list0 = horizontalBlock0.extractParallelSubblocksSeparatedByLines(linkedHashSet0);\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0);\r\n    List<Block> list0 = horizontalBlock0.extractSequentialSubblocks();\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0);\r\n    LinkedHashSet<HWordPosition> linkedHashSet0 = new LinkedHashSet<HWordPosition>(32, 1);\r\n    List<Block> list0 = horizontalBlock0.extractParallelSubblocksSeparatedByLines(linkedHashSet0);\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0);\r\n    List<Block> list0 = horizontalBlock0.extractParallelSubblocksWithoutLines();\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \" \";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0);\r\n    HorizontalBlock horizontalBlock1 = new HorizontalBlock(horizontalBlock0);\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"-A\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0);\r\n    List<Block> list0 = horizontalBlock0.extractParallelSubblocks();\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0);\r\n    LinkedHashSet<HWordPosition> linkedHashSet0 = new LinkedHashSet<HWordPosition>(32, 1);\r\n    CharPosition2 charPosition2_0 = horizontalBlock0.getPos2();\r\n    HWordPosition hWordPosition0 = new HWordPosition(0, charPosition2_0);\r\n    boolean boolean0 = linkedHashSet0.add(hWordPosition0);\r\n    List<Block> list0 = horizontalBlock0.extractParallelSubblocksSeparatedByLines(linkedHashSet0);\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"cannot search in a trivial block\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0);\r\n    LinkedHashSet<HWordPosition> linkedHashSet0 = new LinkedHashSet<HWordPosition>(32, 1);\r\n    List<Block> list0 = horizontalBlock0.extractParallelSubblocksSeparatedByLines(linkedHashSet0);\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"cannot search in a trivial block\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0);\r\n    List<Block> list0 = horizontalBlock0.extractSequentialSubblocks();\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "glengineer.blocks.Block", "glengineer.positions.HWordPosition", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "java.util.List", "glengineer.positions.CharPosition2", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "glengineer.blocks.HorizontalBlock", "glengineer.blocks.Scheme", "static org.junit.Assert.assertEquals", "java.util.LinkedHashSet" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.agents.ContainerGapAgent" : {
      "sequences" : [ "{\r\n    ContainerGapAgent containerGapAgent0 = new ContainerGapAgent(0, 0);\r\n    GroupLayout.SequentialGroup groupLayout_SequentialGroup0 = mock(GroupLayout.SequentialGroup.class, new ViolatedAssumptionAnswer());\r\n    doReturn((GroupLayout.SequentialGroup) null).when(groupLayout_SequentialGroup0).addContainerGap();\r\n    ContainerGapSettings containerGapSettings0 = new ContainerGapSettings((SpecialGapSizes) null);\r\n    containerGapAgent0.settings = containerGapSettings0;\r\n    containerGapAgent0.addOneselfToGroup(groupLayout_SequentialGroup0);\r\n}", "{\r\n    ContainerGapAgent containerGapAgent0 = new ContainerGapAgent(0, 0);\r\n    GroupLayout.SequentialGroup groupLayout_SequentialGroup0 = mock(GroupLayout.SequentialGroup.class, new ViolatedAssumptionAnswer());\r\n    doReturn((GroupLayout.SequentialGroup) null).when(groupLayout_SequentialGroup0).addContainerGap(anyInt(), anyInt());\r\n    containerGapAgent0.addOneselfToGroup(groupLayout_SequentialGroup0);\r\n}", "{\r\n    ContainerGapAgent containerGapAgent0 = new ContainerGapAgent();\r\n    boolean boolean0 = containerGapAgent0.isGap();\r\n}" ],
      "imports" : [ "glengineer.agents.settings.ContainerGapSettings", "static org.junit.Assert.assertNull", "glengineer.agents.settings.SpecialGapSizes", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.evosuite.shaded.org.mockito.Mockito.*", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "glengineer.agents.ContainerGapAgent", "javax.swing.GroupLayout", "org.evosuite.runtime.ViolatedAssumptionAnswer", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.agents.TopSequentialGroupAgent" : {
      "sequences" : [ "{\r\n    TopSequentialGroupAgent topSequentialGroupAgent0 = new TopSequentialGroupAgent();\r\n    FunctionsOnGroup functionsOnGroup0 = topSequentialGroupAgent0.getFunctionsOnGroupImplemenation();\r\n}", "{\r\n    TopSequentialGroupAgent topSequentialGroupAgent0 = new TopSequentialGroupAgent();\r\n    LayoutStyle.ComponentPlacement layoutStyle_ComponentPlacement0 = LayoutStyle.ComponentPlacement.INDENT;\r\n    PreferredGapAgent preferredGapAgent0 = new PreferredGapAgent(layoutStyle_ComponentPlacement0, 0, 1126);\r\n    topSequentialGroupAgent0.addPreferredGapBefore(preferredGapAgent0, preferredGapAgent0);\r\n    GroupCreatorAndElementAdder groupCreatorAndElementAdder0 = mock(GroupCreatorAndElementAdder.class, new ViolatedAssumptionAnswer());\r\n    doReturn((GroupLayout.SequentialGroup) null).when(groupCreatorAndElementAdder0).createSequentialGroup();\r\n    // Undeclared exception!\r\n    try {\r\n        topSequentialGroupAgent0.groupContent(groupCreatorAndElementAdder0);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // cannot add preferred gaps into non-sequential groups\r\n        // \r\n        verifyException(\"glengineer.agents.PreferredGapAgent\", e);\r\n    }\r\n}", "{\r\n    TopSequentialGroupAgent topSequentialGroupAgent0 = new TopSequentialGroupAgent();\r\n    FunctionsOnSequentialGroup functionsOnSequentialGroup0 = topSequentialGroupAgent0.getFunctionsOnSequentialGroupImplemenation();\r\n}", "{\r\n    TopSequentialGroupAgent topSequentialGroupAgent0 = new TopSequentialGroupAgent();\r\n    GroupCreatorAndElementAdder groupCreatorAndElementAdder0 = mock(GroupCreatorAndElementAdder.class, new ViolatedAssumptionAnswer());\r\n    doReturn((GroupLayout.SequentialGroup) null).when(groupCreatorAndElementAdder0).createSequentialGroup();\r\n    GroupLayout.SequentialGroup groupLayout_SequentialGroup0 = topSequentialGroupAgent0.groupContent(groupCreatorAndElementAdder0);\r\n}" ],
      "imports" : [ "glengineer.agents.GroupCreatorAndElementAdder", "static org.junit.Assert.assertNull", "glengineer.agents.PreferredGapAgent", "glengineer.agents.setters.FunctionsOnGroup", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "javax.swing.LayoutStyle", "static org.evosuite.shaded.org.mockito.Mockito.*", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "glengineer.agents.TopSequentialGroupAgent", "javax.swing.GroupLayout", "org.evosuite.runtime.ViolatedAssumptionAnswer", "static org.junit.Assert.assertEquals", "glengineer.agents.setters.FunctionsOnSequentialGroup" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.Axis" : {
      "sequences" : [ "{\r\n    Axis axis0 = Axis.VERTICAL;\r\n    String string0 = axis0.toString();\r\n}", "{\r\n    Axis axis0 = Axis.HORIZONTAL;\r\n    String string0 = axis0.toString();\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals", "glengineer.Axis" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.GroupLayoutEngineer" : {
      "sequences" : [ "{\r\n    Box box0 = Box.createVerticalBox();\r\n    String[] stringArray0 = new String[2];\r\n    stringArray0[0] = \"\";\r\n    stringArray0[1] = \"\";\r\n    GroupLayoutEngineer groupLayoutEngineer0 = null;\r\n    try {\r\n        groupLayoutEngineer0 = new GroupLayoutEngineer(box0, stringArray0);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // the scheme does not possess components' names\r\n        // \r\n        verifyException(\"glengineer.GroupLayoutEngineer\", e);\r\n    }\r\n}", "{\r\n    JList<FileDialog> jList0 = new JList<FileDialog>();\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"VERTICAL\";\r\n    GroupLayoutEngineer groupLayoutEngineer0 = new GroupLayoutEngineer(jList0, stringArray0);\r\n    Axis axis0 = Axis.HORIZONTAL;\r\n    // Undeclared exception!\r\n    try {\r\n        groupLayoutEngineer0.getGroup(axis0, \"flB%X;}x\", \"oHT!<\");\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // no such group found: <flB%X;}x,oHT!<>\r\n        // \r\n        verifyException(\"glengineer.GroupLayoutEngineer\", e);\r\n    }\r\n}", "{\r\n    DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();\r\n    Icon icon0 = defaultTreeCellRenderer0.getClosedIcon();\r\n    JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem(icon0);\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"75y\";\r\n    GroupLayoutEngineer groupLayoutEngineer0 = new GroupLayoutEngineer(jRadioButtonMenuItem0, stringArray0);\r\n    groupLayoutEngineer0.setAutoCreateContainerGaps(true);\r\n}", "{\r\n    DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();\r\n    Icon icon0 = defaultTreeCellRenderer0.getClosedIcon();\r\n    JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem(icon0);\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"75y\";\r\n    GroupLayoutEngineer groupLayoutEngineer0 = new GroupLayoutEngineer(jRadioButtonMenuItem0, stringArray0);\r\n    InternationalFormatter internationalFormatter0 = new InternationalFormatter();\r\n    JFormattedTextField jFormattedTextField0 = new JFormattedTextField((JFormattedTextField.AbstractFormatter) internationalFormatter0);\r\n    groupLayoutEngineer0.associate(\"75y\", jFormattedTextField0);\r\n}", "{\r\n    DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();\r\n    Icon icon0 = defaultTreeCellRenderer0.getClosedIcon();\r\n    JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem(icon0);\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"75y\";\r\n    GroupLayoutEngineer groupLayoutEngineer0 = new GroupLayoutEngineer(jRadioButtonMenuItem0, stringArray0);\r\n    groupLayoutEngineer0.printGroupStructure();\r\n}" ],
      "imports" : [ "javax.swing.JFormattedTextField", "static org.junit.Assert.assertNull", "javax.swing.JList", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "javax.swing.Icon", "static org.junit.Assert.*", "javax.swing.Box", "java.awt.FileDialog", "javax.swing.text.InternationalFormatter", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "javax.swing.JRadioButtonMenuItem", "static org.junit.Assert.assertEquals", "glengineer.Axis", "glengineer.GroupLayoutEngineer", "javax.swing.tree.DefaultTreeCellRenderer" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.agents.TemporaryGapAgent" : {
      "sequences" : [ "{\r\n    TemporaryGapAgent temporaryGapAgent0 = new TemporaryGapAgent(\"nxJe%lB@N%n3N\");\r\n    ParallelGroupAgent parallelGroupAgent0 = temporaryGapAgent0.findDependingParallelGroupByNames(\"\", \"\");\r\n}", "{\r\n    TemporaryGapAgent temporaryGapAgent0 = new TemporaryGapAgent(\"nxJe%lB@N%n3N\");\r\n    GroupAgent groupAgent0 = temporaryGapAgent0.findDependingGroupByNames(\"\", (String) null);\r\n}", "{\r\n    TemporaryGapAgent temporaryGapAgent0 = new TemporaryGapAgent(\"U)XzgdX\");\r\n    boolean boolean0 = temporaryGapAgent0.isGap();\r\n}", "{\r\n    TemporaryGapAgent temporaryGapAgent0 = new TemporaryGapAgent(\"U)XzgdX\");\r\n    boolean boolean0 = temporaryGapAgent0.isGroup(\"\", \"\");\r\n}", "{\r\n    TemporaryGapAgent temporaryGapAgent0 = new TemporaryGapAgent(\"MyK'Hx\");\r\n    boolean boolean0 = temporaryGapAgent0.equals((Agent) temporaryGapAgent0);\r\n}", "{\r\n    TemporaryGapAgent temporaryGapAgent0 = new TemporaryGapAgent(\"U)XzgdX\");\r\n    boolean boolean0 = temporaryGapAgent0.isComponent(\"\");\r\n}", "{\r\n    TemporaryGapAgent temporaryGapAgent0 = new TemporaryGapAgent(\"nxJe%lB@N%n3N\");\r\n    String string0 = temporaryGapAgent0.toString();\r\n}", "{\r\n    TemporaryGapAgent temporaryGapAgent0 = new TemporaryGapAgent(\"MyK'Hx\");\r\n    String string0 = temporaryGapAgent0.getFirstName();\r\n}", "{\r\n    TemporaryGapAgent temporaryGapAgent0 = new TemporaryGapAgent(\"U)XzgdX\");\r\n    GapAgent gapAgent0 = new GapAgent(4097);\r\n    boolean boolean0 = temporaryGapAgent0.equals((Agent) gapAgent0);\r\n}", "{\r\n    TemporaryGapAgent temporaryGapAgent0 = new TemporaryGapAgent(\"XEk2f!o>\\\"QLf-Bpz=v9\");\r\n    // Undeclared exception!\r\n    try {\r\n        temporaryGapAgent0.addContentToGroup((GroupLayout.Group) null, (GroupCreatorAndElementAdder) null);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // An attempt to add content of a temporary gap.\r\n        // \r\n        verifyException(\"glengineer.agents.TemporaryGapAgent\", e);\r\n    }\r\n}", "{\r\n    TemporaryGapAgent temporaryGapAgent0 = new TemporaryGapAgent(\"glengineer.agents.TemporaryGapAgent\");\r\n    ComponentAgent componentAgent0 = temporaryGapAgent0.findDependingComponentByName(\"\");\r\n}", "{\r\n    TemporaryGapAgent temporaryGapAgent0 = new TemporaryGapAgent(\"U)XzgdX\");\r\n    String string0 = temporaryGapAgent0.getDenotation();\r\n}", "{\r\n    TemporaryGapAgent temporaryGapAgent0 = new TemporaryGapAgent(\"components can be aligned in parallel groups only\");\r\n    SequentialGroupAgent sequentialGroupAgent0 = temporaryGapAgent0.findDependingSequentialGroupByNames(\"|EH&F3Eitf\", \"|EH&F3Eitf\");\r\n}", "{\r\n    TemporaryGapAgent temporaryGapAgent0 = new TemporaryGapAgent(\"nxJe%lB@N%n3N\");\r\n    String string0 = temporaryGapAgent0.getLastName();\r\n}", "{\r\n    TemporaryGapAgent temporaryGapAgent0 = new TemporaryGapAgent(\"MyK'Hx\");\r\n    TemporaryGapAgent temporaryGapAgent1 = new TemporaryGapAgent(\"\");\r\n    boolean boolean0 = temporaryGapAgent0.equals((Agent) temporaryGapAgent1);\r\n}" ],
      "imports" : [ "glengineer.agents.TemporaryGapAgent", "glengineer.agents.GroupCreatorAndElementAdder", "glengineer.agents.Agent", "static org.junit.Assert.assertNull", "glengineer.agents.GroupAgent", "glengineer.agents.ParallelGroupAgent", "glengineer.agents.SequentialGroupAgent", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "glengineer.agents.ComponentAgent", "glengineer.agents.GapAgent", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "javax.swing.GroupLayout", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.agents.Agent" : {
      "sequences" : [ "{\r\n    TemporaryGapAgent temporaryGapAgent0 = new TemporaryGapAgent(\"glengineer.agents.settings.ComponentSettings\");\r\n}" ],
      "imports" : [ "glengineer.agents.TemporaryGapAgent", "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.agents.settings.SpecialGapSizes" : {
      "sequences" : [ "{\r\n    SpecialGapSizes specialGapSizes0 = new SpecialGapSizes(0, (-695));\r\n}", "{\r\n    SpecialGapSizes specialGapSizes0 = new SpecialGapSizes();\r\n    String string0 = specialGapSizes0.toString();\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "glengineer.agents.settings.SpecialGapSizes", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.agents.GroupAgent" : {
      "sequences" : [ "{\r\n    TopSequentialGroupAgent topSequentialGroupAgent0 = new TopSequentialGroupAgent();\r\n    // Undeclared exception!\r\n    try {\r\n        topSequentialGroupAgent0.getComponent(\"\");\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // component  in the sequential group <null,null> not found\r\n        // \r\n        verifyException(\"glengineer.agents.GroupAgent\", e);\r\n    }\r\n}", "{\r\n    ParallelGroupAgent parallelGroupAgent0 = new ParallelGroupAgent();\r\n    GapAgent gapAgent0 = new GapAgent();\r\n    parallelGroupAgent0.addGapAfter(gapAgent0, gapAgent0);\r\n    GroupLayoutEngineer.TemporaryGapsToGaps groupLayoutEngineer_TemporaryGapsToGaps0 = mock(GroupLayoutEngineer.TemporaryGapsToGaps.class, new ViolatedAssumptionAnswer());\r\n    parallelGroupAgent0.replaceTemporaryGapsByRealGaps(groupLayoutEngineer_TemporaryGapsToGaps0);\r\n}", "{\r\n    ParallelGroupAgent parallelGroupAgent0 = new ParallelGroupAgent();\r\n    List<Agent> list0 = parallelGroupAgent0.getChildren();\r\n}", "{\r\n    TopSequentialGroupAgent topSequentialGroupAgent0 = new TopSequentialGroupAgent();\r\n    topSequentialGroupAgent0.addGapBefore((GapAgent) null, (Agent) null);\r\n    // Undeclared exception!\r\n    try {\r\n        topSequentialGroupAgent0.addGapAfter((GapAgent) null, (Agent) null);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"glengineer.agents.GroupAgent\", e);\r\n    }\r\n}", "{\r\n    TemporaryGapAgent temporaryGapAgent0 = new TemporaryGapAgent(\"the group <\");\r\n    TopSequentialGroupAgent topSequentialGroupAgent0 = new TopSequentialGroupAgent();\r\n    topSequentialGroupAgent0.addAgent(temporaryGapAgent0);\r\n    GroupLayoutEngineer.TemporaryGapsToGaps groupLayoutEngineer_TemporaryGapsToGaps0 = mock(GroupLayoutEngineer.TemporaryGapsToGaps.class, new ViolatedAssumptionAnswer());\r\n    doReturn((Agent) null).when(groupLayoutEngineer_TemporaryGapsToGaps0).gap(any(glengineer.agents.TemporaryGapAgent.class));\r\n    topSequentialGroupAgent0.replaceTemporaryGapsByRealGaps(groupLayoutEngineer_TemporaryGapsToGaps0);\r\n}", "{\r\n    SequentialGroupAgent sequentialGroupAgent0 = new SequentialGroupAgent();\r\n    boolean boolean0 = sequentialGroupAgent0.isGap();\r\n}", "{\r\n    ParallelGroupAgent parallelGroupAgent0 = new ParallelGroupAgent();\r\n    GroupAgent.FunctionsOnGroupAndElementImplementation groupAgent_FunctionsOnGroupAndElementImplementation0 = new GroupAgent.FunctionsOnGroupAndElementImplementation(parallelGroupAgent0, parallelGroupAgent0);\r\n    groupAgent_FunctionsOnGroupAndElementImplementation0.addPrecedingGap(0, (-1734), 0);\r\n    // Undeclared exception!\r\n    try {\r\n        groupAgent_FunctionsOnGroupAndElementImplementation0.addPrecedingGap(0, 0, 0);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // the parallel group <null,null> in the parallel group <null,null> not found\r\n        // \r\n        verifyException(\"glengineer.agents.GroupAgent\", e);\r\n    }\r\n}", "{\r\n    TopSequentialGroupAgent topSequentialGroupAgent0 = new TopSequentialGroupAgent();\r\n    GroupAgent.FunctionsOnGroupAndElementImplementation groupAgent_FunctionsOnGroupAndElementImplementation0 = new GroupAgent.FunctionsOnGroupAndElementImplementation(topSequentialGroupAgent0, topSequentialGroupAgent0);\r\n    groupAgent_FunctionsOnGroupAndElementImplementation0.addFollowingGap(1);\r\n}", "{\r\n    TopSequentialGroupAgent topSequentialGroupAgent0 = new TopSequentialGroupAgent();\r\n    int int0 = topSequentialGroupAgent0.getNumberOfChildren();\r\n}", "{\r\n    TopSequentialGroupAgent topSequentialGroupAgent0 = new TopSequentialGroupAgent();\r\n    GroupAgent.FunctionsOnGroupAndElementImplementation groupAgent_FunctionsOnGroupAndElementImplementation0 = new GroupAgent.FunctionsOnGroupAndElementImplementation(topSequentialGroupAgent0, topSequentialGroupAgent0);\r\n    groupAgent_FunctionsOnGroupAndElementImplementation0.addFollowingGap((-592), (-592), (-567));\r\n    GapAgent gapAgent0 = new GapAgent((-567));\r\n    // Undeclared exception!\r\n    try {\r\n        topSequentialGroupAgent0.addGapAfter(gapAgent0, gapAgent0);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // the gap (-567,-567,-567) in the sequential group <null,null> not found\r\n        // \r\n        verifyException(\"glengineer.agents.GroupAgent\", e);\r\n    }\r\n}", "{\r\n    ParallelGroupAgent parallelGroupAgent0 = new ParallelGroupAgent();\r\n    GapAgent gapAgent0 = new GapAgent(1166);\r\n    parallelGroupAgent0.addGapBefore(gapAgent0, gapAgent0);\r\n    parallelGroupAgent0.removeGapsFromParallelGroups();\r\n}", "{\r\n    TopSequentialGroupAgent topSequentialGroupAgent0 = new TopSequentialGroupAgent();\r\n    GroupCreatorAndElementAdder groupCreatorAndElementAdder0 = mock(GroupCreatorAndElementAdder.class, new ViolatedAssumptionAnswer());\r\n    doReturn((GroupLayout.SequentialGroup) null).when(groupCreatorAndElementAdder0).createSequentialGroup();\r\n    topSequentialGroupAgent0.addContentToGroup((GroupLayout.Group) null, groupCreatorAndElementAdder0);\r\n}", "{\r\n    TopSequentialGroupAgent topSequentialGroupAgent0 = new TopSequentialGroupAgent();\r\n    GroupAgent.FunctionsOnGroupAndElementImplementation groupAgent_FunctionsOnGroupAndElementImplementation0 = new GroupAgent.FunctionsOnGroupAndElementImplementation(topSequentialGroupAgent0, topSequentialGroupAgent0);\r\n    GroupLayoutEngineer.TemporaryGapsToGaps groupLayoutEngineer_TemporaryGapsToGaps0 = mock(GroupLayoutEngineer.TemporaryGapsToGaps.class, new ViolatedAssumptionAnswer());\r\n    topSequentialGroupAgent0.addAgent(groupAgent_FunctionsOnGroupAndElementImplementation0.elementAgent);\r\n    // Undeclared exception!\r\n    try {\r\n        topSequentialGroupAgent0.replaceTemporaryGapsByRealGaps(groupLayoutEngineer_TemporaryGapsToGaps0);\r\n    } catch (StackOverflowError e) {\r\n    // \r\n    // no message in exception (getMessage() returned null)\r\n    // \r\n    }\r\n}", "{\r\n    TopSequentialGroupAgent topSequentialGroupAgent0 = new TopSequentialGroupAgent();\r\n    // Undeclared exception!\r\n    try {\r\n        topSequentialGroupAgent0.addAgent((Agent) null);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // Cannot add null agents.\r\n        // \r\n        verifyException(\"glengineer.agents.GroupAgent\", e);\r\n    }\r\n}", "{\r\n    LayoutStyle.ComponentPlacement layoutStyle_ComponentPlacement0 = LayoutStyle.ComponentPlacement.INDENT;\r\n    PreferredGapAgent preferredGapAgent0 = new PreferredGapAgent(layoutStyle_ComponentPlacement0);\r\n    GroupAgent.FunctionsOnGroupAndElementImplementation groupAgent_FunctionsOnGroupAndElementImplementation0 = new GroupAgent.FunctionsOnGroupAndElementImplementation((GroupAgent) null, preferredGapAgent0);\r\n    // Undeclared exception!\r\n    try {\r\n        groupAgent_FunctionsOnGroupAndElementImplementation0.addPrecedingGap((-2815));\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"glengineer.agents.GroupAgent$FunctionsOnGroupAndElementImplementation\", e);\r\n    }\r\n}", "{\r\n    TopSequentialGroupAgent topSequentialGroupAgent0 = new TopSequentialGroupAgent();\r\n    TemporaryGapAgent temporaryGapAgent0 = new TemporaryGapAgent(\" not found\");\r\n    boolean boolean0 = topSequentialGroupAgent0.equals((Agent) temporaryGapAgent0);\r\n}", "{\r\n    ParallelGroupAgent parallelGroupAgent0 = new ParallelGroupAgent();\r\n    ComponentAgent componentAgent0 = new ComponentAgent(\"&6fg \\\"H6.1(d\");\r\n    parallelGroupAgent0.addAgent(componentAgent0);\r\n    // Undeclared exception!\r\n    try {\r\n        parallelGroupAgent0.getGroup(\"&6fg \\\"H6.1(d\", \"j2| 6UF0]|az:Sa\");\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // the group <&6fg \\\"H6.1(d,j2| 6UF0]|az:Sa> in the parallel group <&6fg \\\"H6.1(d,&6fg \\\"H6.1(d> not found\r\n        // \r\n        verifyException(\"glengineer.agents.GroupAgent\", e);\r\n    }\r\n}", "{\r\n    TopSequentialGroupAgent topSequentialGroupAgent0 = new TopSequentialGroupAgent();\r\n    boolean boolean0 = topSequentialGroupAgent0.isComponent(\"\");\r\n}", "{\r\n    ParallelGroupAgent parallelGroupAgent0 = new ParallelGroupAgent();\r\n    ArrayDeque<ParallelGroupAgent> arrayDeque0 = new ArrayDeque<ParallelGroupAgent>();\r\n    LinkedList<Agent> linkedList0 = new LinkedList<Agent>(arrayDeque0);\r\n    parallelGroupAgent0.childrenAgents = linkedList0;\r\n    boolean boolean0 = linkedList0.add((Agent) parallelGroupAgent0);\r\n    // Undeclared exception!\r\n    try {\r\n        parallelGroupAgent0.removeGapsFromParallelGroups();\r\n    } catch (StackOverflowError e) {\r\n    // \r\n    // no message in exception (getMessage() returned null)\r\n    // \r\n    }\r\n}", "{\r\n    TopSequentialGroupAgent topSequentialGroupAgent0 = new TopSequentialGroupAgent();\r\n    LayoutStyle.ComponentPlacement layoutStyle_ComponentPlacement0 = LayoutStyle.ComponentPlacement.INDENT;\r\n    PreferredGapAgent preferredGapAgent0 = new PreferredGapAgent(layoutStyle_ComponentPlacement0);\r\n    topSequentialGroupAgent0.addPreferredGapAfter(preferredGapAgent0, preferredGapAgent0);\r\n    ComponentAgent componentAgent0 = topSequentialGroupAgent0.findDependingComponentByName(\"\");\r\n}", "{\r\n    TemporaryGapAgent temporaryGapAgent0 = new TemporaryGapAgent(\"the group <\");\r\n    TopSequentialGroupAgent topSequentialGroupAgent0 = new TopSequentialGroupAgent();\r\n    topSequentialGroupAgent0.addAgent(temporaryGapAgent0);\r\n    // Undeclared exception!\r\n    try {\r\n        topSequentialGroupAgent0.getComponent(\"\");\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // component  in the sequential group <null,null> not found\r\n        // \r\n        verifyException(\"glengineer.agents.GroupAgent\", e);\r\n    }\r\n}" ],
      "imports" : [ "glengineer.agents.GroupCreatorAndElementAdder", "static org.junit.Assert.assertNull", "glengineer.agents.SequentialGroupAgent", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.evosuite.runtime.EvoRunner", "glengineer.agents.TopSequentialGroupAgent", "static org.junit.Assert.assertEquals", "java.util.LinkedList", "glengineer.GroupLayoutEngineer", "glengineer.agents.TemporaryGapAgent", "glengineer.agents.Agent", "glengineer.agents.GroupAgent", "glengineer.agents.PreferredGapAgent", "glengineer.agents.ParallelGroupAgent", "org.junit.Test", "static org.junit.Assert.*", "glengineer.agents.ComponentAgent", "glengineer.agents.GapAgent", "javax.swing.LayoutStyle", "java.util.List", "static org.evosuite.shaded.org.mockito.Mockito.*", "org.evosuite.runtime.EvoRunnerParameters", "javax.swing.GroupLayout", "org.evosuite.runtime.ViolatedAssumptionAnswer", "java.util.ArrayDeque" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.agents.settings.Settings" : {
      "sequences" : [ "{\r\n    Settings settings0 = new Settings();\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "glengineer.agents.settings.Settings", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.agents.PreferredGapAgent" : {
      "sequences" : [ "{\r\n    LayoutStyle.ComponentPlacement layoutStyle_ComponentPlacement0 = LayoutStyle.ComponentPlacement.INDENT;\r\n    PreferredGapAgent preferredGapAgent0 = new PreferredGapAgent(layoutStyle_ComponentPlacement0);\r\n    ComponentAgent componentAgent0 = preferredGapAgent0.findDependingComponentByName(\"YjyixFQEwV\");\r\n}", "{\r\n    LayoutStyle.ComponentPlacement layoutStyle_ComponentPlacement0 = LayoutStyle.ComponentPlacement.UNRELATED;\r\n    PreferredGapAgent preferredGapAgent0 = new PreferredGapAgent(layoutStyle_ComponentPlacement0);\r\n    String string0 = preferredGapAgent0.getLastName();\r\n}", "{\r\n    LayoutStyle.ComponentPlacement layoutStyle_ComponentPlacement0 = LayoutStyle.ComponentPlacement.INDENT;\r\n    PreferredGapAgent preferredGapAgent0 = new PreferredGapAgent(layoutStyle_ComponentPlacement0, 650, 650);\r\n    // Undeclared exception!\r\n    try {\r\n        preferredGapAgent0.addContentToGroup((GroupLayout.Group) null, (GroupCreatorAndElementAdder) null);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // cannot add preferred gaps into non-sequential groups\r\n        // \r\n        verifyException(\"glengineer.agents.PreferredGapAgent\", e);\r\n    }\r\n}", "{\r\n    LayoutStyle.ComponentPlacement layoutStyle_ComponentPlacement0 = LayoutStyle.ComponentPlacement.INDENT;\r\n    PreferredGapAgent preferredGapAgent0 = new PreferredGapAgent(layoutStyle_ComponentPlacement0);\r\n    boolean boolean0 = preferredGapAgent0.isGroup(\"YjyixFQEwV\", \"gWHh;-/mQ&ruuSOu\");\r\n}", "{\r\n    LayoutStyle.ComponentPlacement layoutStyle_ComponentPlacement0 = LayoutStyle.ComponentPlacement.UNRELATED;\r\n    PreferredGapAgent preferredGapAgent0 = new PreferredGapAgent(layoutStyle_ComponentPlacement0, 0, 0);\r\n    boolean boolean0 = preferredGapAgent0.equals((Agent) null);\r\n}", "{\r\n    LayoutStyle.ComponentPlacement layoutStyle_ComponentPlacement0 = LayoutStyle.ComponentPlacement.RELATED;\r\n    PreferredGapAgent preferredGapAgent0 = new PreferredGapAgent(layoutStyle_ComponentPlacement0, 1744, 1744);\r\n    ParallelGroupAgent parallelGroupAgent0 = preferredGapAgent0.findDependingParallelGroupByNames(\"\", \"\");\r\n}", "{\r\n    LayoutStyle.ComponentPlacement layoutStyle_ComponentPlacement0 = LayoutStyle.ComponentPlacement.INDENT;\r\n    PreferredGapAgent preferredGapAgent0 = new PreferredGapAgent(layoutStyle_ComponentPlacement0);\r\n    preferredGapAgent0.setSettings(layoutStyle_ComponentPlacement0, 1022, 1022);\r\n}", "{\r\n    LayoutStyle.ComponentPlacement layoutStyle_ComponentPlacement0 = LayoutStyle.ComponentPlacement.UNRELATED;\r\n    PreferredGapAgent preferredGapAgent0 = new PreferredGapAgent(layoutStyle_ComponentPlacement0, 0, 0);\r\n    boolean boolean0 = preferredGapAgent0.isComponent(\"i'SeXnT2\");\r\n}", "{\r\n    LayoutStyle.ComponentPlacement layoutStyle_ComponentPlacement0 = LayoutStyle.ComponentPlacement.INDENT;\r\n    PreferredGapAgent preferredGapAgent0 = new PreferredGapAgent(layoutStyle_ComponentPlacement0);\r\n    GroupAgent groupAgent0 = preferredGapAgent0.findDependingGroupByNames(\" gap\", \"glengineer.agents.PreferredGapAgent\");\r\n}", "{\r\n    LayoutStyle.ComponentPlacement layoutStyle_ComponentPlacement0 = LayoutStyle.ComponentPlacement.INDENT;\r\n    PreferredGapAgent preferredGapAgent0 = new PreferredGapAgent(layoutStyle_ComponentPlacement0);\r\n    boolean boolean0 = preferredGapAgent0.isGap();\r\n}", "{\r\n    LayoutStyle.ComponentPlacement layoutStyle_ComponentPlacement0 = LayoutStyle.ComponentPlacement.RELATED;\r\n    PreferredGapAgent preferredGapAgent0 = new PreferredGapAgent(layoutStyle_ComponentPlacement0, 1744, 1744);\r\n    String string0 = preferredGapAgent0.toString();\r\n}", "{\r\n    LayoutStyle.ComponentPlacement layoutStyle_ComponentPlacement0 = LayoutStyle.ComponentPlacement.INDENT;\r\n    PreferredGapAgent preferredGapAgent0 = new PreferredGapAgent(layoutStyle_ComponentPlacement0);\r\n    String string0 = preferredGapAgent0.getFirstName();\r\n}", "{\r\n    LayoutStyle.ComponentPlacement layoutStyle_ComponentPlacement0 = LayoutStyle.ComponentPlacement.UNRELATED;\r\n    PreferredGapAgent preferredGapAgent0 = new PreferredGapAgent(layoutStyle_ComponentPlacement0, 0, 0);\r\n    SequentialGroupAgent sequentialGroupAgent0 = preferredGapAgent0.findDependingSequentialGroupByNames(\"\", (String) null);\r\n}" ],
      "imports" : [ "glengineer.agents.GroupCreatorAndElementAdder", "glengineer.agents.Agent", "static org.junit.Assert.assertNull", "glengineer.agents.GroupAgent", "glengineer.agents.PreferredGapAgent", "glengineer.agents.ParallelGroupAgent", "glengineer.agents.SequentialGroupAgent", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "glengineer.agents.ComponentAgent", "javax.swing.LayoutStyle", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "javax.swing.GroupLayout", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.positions.HWordPosition" : {
      "sequences" : [ "{\r\n    HWordPosition hWordPosition0 = null;\r\n    try {\r\n        hWordPosition0 = new HWordPosition(0, (-4426), 0);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // wrong word position parameters\r\n        // \r\n        verifyException(\"glengineer.positions.HWordPosition\", e);\r\n    }\r\n}", "{\r\n    CharPosition1 charPosition1_0 = new CharPosition1(0, 0);\r\n    HWordPosition hWordPosition0 = new HWordPosition(charPosition1_0);\r\n    HWordPosition hWordPosition1 = new HWordPosition(charPosition1_0, 2073);\r\n    boolean boolean0 = hWordPosition0.equals((WordPosition) hWordPosition1);\r\n}", "{\r\n    HWordPosition hWordPosition0 = new HWordPosition((-2306), (-2306), (-2306));\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    boolean boolean0 = hWordPosition0.intersects(scheme0);\r\n}", "{\r\n    CharPosition charPosition0 = new CharPosition(221, 221);\r\n    HWordPosition hWordPosition0 = new HWordPosition(charPosition0);\r\n    int int0 = hWordPosition0.getWidth();\r\n}", "{\r\n    CharPosition charPosition0 = new CharPosition(521, 521);\r\n    HWordPosition hWordPosition0 = new HWordPosition(charPosition0);\r\n    CharPosition2 charPosition2_0 = hWordPosition0.getEnd();\r\n}", "{\r\n    HWordPosition hWordPosition0 = new HWordPosition(0, 0, 1077);\r\n    // Undeclared exception!\r\n    try {\r\n        hWordPosition0.textAt((CharTable) null);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"glengineer.positions.HWordPosition\", e);\r\n    }\r\n}", "{\r\n    CharPosition1 charPosition1_0 = new CharPosition1(4, 4);\r\n    HWordPosition hWordPosition0 = new HWordPosition(charPosition1_0);\r\n    boolean boolean0 = hWordPosition0.isTrivial();\r\n}", "{\r\n    HWordPosition hWordPosition0 = new HWordPosition((-2306), (-2306), (-2306));\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    VerticalBlock verticalBlock0 = new VerticalBlock(scheme0);\r\n    boolean boolean0 = hWordPosition0.liesIn(verticalBlock0);\r\n}", "{\r\n    CharPosition charPosition0 = new CharPosition(221, 221);\r\n    HWordPosition hWordPosition0 = new HWordPosition(charPosition0);\r\n    HWordPosition hWordPosition1 = new HWordPosition(124, charPosition0);\r\n    boolean boolean0 = hWordPosition0.equals((WordPosition) hWordPosition1);\r\n}", "{\r\n    CharPosition charPosition0 = new CharPosition(221, 221);\r\n    HWordPosition hWordPosition0 = new HWordPosition(charPosition0);\r\n    boolean boolean0 = hWordPosition0.equals((WordPosition) hWordPosition0);\r\n}", "{\r\n    CharPosition1 charPosition1_0 = new CharPosition1(0, 0);\r\n    HWordPosition hWordPosition0 = new HWordPosition(charPosition1_0, 0);\r\n    boolean boolean0 = hWordPosition0.contains(0, 0);\r\n}", "{\r\n    CharPosition1 charPosition1_0 = new CharPosition1(45, (-645));\r\n    HWordPosition hWordPosition0 = new HWordPosition(charPosition1_0, 504);\r\n    boolean boolean0 = hWordPosition0.contains((CharPosition) charPosition1_0);\r\n}", "{\r\n    HWordPosition hWordPosition0 = new HWordPosition(124, 124, 0);\r\n    CharPosition1 charPosition1_0 = new CharPosition1((-2306), 0);\r\n    boolean boolean0 = hWordPosition0.contains((CharPosition) charPosition1_0);\r\n}", "{\r\n    CharPosition1 charPosition1_0 = new CharPosition1(0, 0);\r\n    HWordPosition hWordPosition0 = new HWordPosition(charPosition1_0, 0);\r\n    boolean boolean0 = hWordPosition0.contains(0, 844);\r\n}", "{\r\n    HWordPosition hWordPosition0 = new HWordPosition((-1), 551, 0);\r\n    boolean boolean0 = hWordPosition0.isTrivial();\r\n}", "{\r\n    CharPosition charPosition0 = new CharPosition(0, (-538));\r\n    HWordPosition hWordPosition0 = new HWordPosition(charPosition0);\r\n    CharPosition1 charPosition1_0 = hWordPosition0.getStart();\r\n    VWordPosition vWordPosition0 = new VWordPosition(charPosition1_0, 0);\r\n    boolean boolean0 = hWordPosition0.equals((WordPosition) vWordPosition0);\r\n}", "{\r\n    HWordPosition hWordPosition0 = null;\r\n    try {\r\n        hWordPosition0 = new HWordPosition((Block) null);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"glengineer.positions.HWordPosition\", e);\r\n    }\r\n}", "{\r\n    CharPosition1 charPosition1_0 = new CharPosition1(4, 4);\r\n    HWordPosition hWordPosition0 = new HWordPosition(charPosition1_0);\r\n    String string0 = hWordPosition0.toString();\r\n}", "{\r\n    CharPosition1 charPosition1_0 = new CharPosition1(0, 0);\r\n    HWordPosition hWordPosition0 = new HWordPosition(charPosition1_0);\r\n    // Undeclared exception!\r\n    try {\r\n        hWordPosition0.getLengthInsideOf((Block) null);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"glengineer.positions.HWordPosition\", e);\r\n    }\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "glengineer.blocks.Block", "glengineer.positions.HWordPosition", "glengineer.positions.WordPosition", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "glengineer.positions.VWordPosition", "glengineer.positions.CharPosition", "glengineer.blocks.CharTable", "glengineer.positions.CharPosition2", "org.evosuite.runtime.EvoRunnerParameters", "glengineer.positions.CharPosition1", "org.evosuite.runtime.EvoRunner", "glengineer.blocks.Scheme", "static org.junit.Assert.assertEquals", "glengineer.blocks.VerticalBlock" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.agents.ParallelGroupAgent" : {
      "sequences" : [ "{\r\n    ParallelGroupAgent parallelGroupAgent0 = new ParallelGroupAgent();\r\n    // Undeclared exception!\r\n    try {\r\n        parallelGroupAgent0.getGroup(\"~/B/pwf\", \"ZG:qrHj`ZfM<Bv\");\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // the group <~/B/pwf,ZG:qrHj`ZfM<Bv> in the parallel group <null,null> not found\r\n        // \r\n        verifyException(\"glengineer.agents.GroupAgent\", e);\r\n    }\r\n}", "{\r\n    ParallelGroupAgent parallelGroupAgent0 = new ParallelGroupAgent();\r\n    GapAgent gapAgent0 = new GapAgent(0);\r\n    parallelGroupAgent0.addGapBefore(gapAgent0, gapAgent0);\r\n    GroupCreatorAndElementAdder groupCreatorAndElementAdder0 = mock(GroupCreatorAndElementAdder.class, new ViolatedAssumptionAnswer());\r\n    doReturn((GroupLayout.ParallelGroup) null).when(groupCreatorAndElementAdder0).createParallelGroup(any(glengineer.agents.settings.ParallelGroupSettings.class));\r\n    // Undeclared exception!\r\n    try {\r\n        parallelGroupAgent0.groupContent(groupCreatorAndElementAdder0);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"glengineer.agents.GapAgent\", e);\r\n    }\r\n}", "{\r\n    ParallelGroupAgent parallelGroupAgent0 = new ParallelGroupAgent();\r\n    GroupCreatorAndElementAdder groupCreatorAndElementAdder0 = mock(GroupCreatorAndElementAdder.class, new ViolatedAssumptionAnswer());\r\n    doReturn((GroupLayout.ParallelGroup) null).when(groupCreatorAndElementAdder0).createParallelGroup(any(glengineer.agents.settings.ParallelGroupSettings.class));\r\n    parallelGroupAgent0.addContentToGroup((GroupLayout.Group) null, groupCreatorAndElementAdder0);\r\n}", "{\r\n    ParallelGroupAgent parallelGroupAgent0 = new ParallelGroupAgent();\r\n    FunctionsOnGroup functionsOnGroup0 = parallelGroupAgent0.getFunctionsOnGroupImplemenation();\r\n}", "{\r\n    ParallelGroupAgent parallelGroupAgent0 = new ParallelGroupAgent();\r\n    GapAgent gapAgent0 = new GapAgent(2151);\r\n    parallelGroupAgent0.addGapBefore(gapAgent0, gapAgent0);\r\n    boolean boolean0 = parallelGroupAgent0.containsGapsOnly();\r\n}", "{\r\n    ParallelGroupAgent parallelGroupAgent0 = new ParallelGroupAgent();\r\n    GapAgent gapAgent0 = new GapAgent(2151);\r\n    parallelGroupAgent0.addGapBefore(gapAgent0, gapAgent0);\r\n    parallelGroupAgent0.removeAllGaps();\r\n}", "{\r\n    ParallelGroupAgent parallelGroupAgent0 = new ParallelGroupAgent();\r\n    GapAgent gapAgent0 = new GapAgent();\r\n    parallelGroupAgent0.addGapAfter(gapAgent0, gapAgent0);\r\n    Agent agent0 = parallelGroupAgent0.getGapsType();\r\n}" ],
      "imports" : [ "glengineer.agents.GroupCreatorAndElementAdder", "glengineer.agents.Agent", "static org.junit.Assert.assertNull", "glengineer.agents.setters.FunctionsOnGroup", "glengineer.agents.ParallelGroupAgent", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "glengineer.agents.GapAgent", "static org.evosuite.shaded.org.mockito.Mockito.*", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "javax.swing.GroupLayout", "org.evosuite.runtime.ViolatedAssumptionAnswer", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.blocks.Block" : {
      "sequences" : [ "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HWordPosition hWordPosition0 = new HWordPosition(0, 0, 0);\r\n    CharPosition1 charPosition1_0 = hWordPosition0.getStart();\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0, charPosition1_0, charPosition1_0);\r\n    String string0 = horizontalBlock0.getUpperLine();\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \".\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    CharPosition1 charPosition1_0 = new CharPosition1(196, 0);\r\n    VerticalBlock verticalBlock0 = null;\r\n    try {\r\n        verticalBlock0 = new VerticalBlock(scheme0, charPosition1_0, charPosition1_0);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // improper block definition: 196,0, 196,0.\r\n        // \r\n        verifyException(\"glengineer.blocks.Block\", e);\r\n    }\r\n}", "{\r\n    CharPosition1 charPosition1_0 = new CharPosition1((-793), (-793));\r\n    HorizontalBlock horizontalBlock0 = null;\r\n    try {\r\n        horizontalBlock0 = new HorizontalBlock((Scheme) null, charPosition1_0, charPosition1_0);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // improper block definition: -793,-793, -793,-793.\r\n        // \r\n        verifyException(\"glengineer.blocks.Block\", e);\r\n    }\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HWordPosition hWordPosition0 = new HWordPosition(0, 0, 0);\r\n    CharPosition1 charPosition1_0 = hWordPosition0.getStart();\r\n    HorizontalBlock horizontalBlock0 = new HorizontalBlock(scheme0, charPosition1_0, charPosition1_0);\r\n    VerticalBlock verticalBlock0 = null;\r\n    try {\r\n        verticalBlock0 = new VerticalBlock(horizontalBlock0, 0, 0, 0, 1690);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // improper block definition: 0,0, 0,1690.\r\n        // \r\n        verifyException(\"glengineer.blocks.Block\", e);\r\n    }\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"2\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    VerticalBlock verticalBlock0 = new VerticalBlock(scheme0);\r\n    boolean boolean0 = verticalBlock0.containsOnlyOneWord();\r\n}", "{\r\n    VerticalBlock verticalBlock0 = null;\r\n    try {\r\n        verticalBlock0 = new VerticalBlock((Scheme) null, 1, 1, (-1297), (-1297));\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // improper block definition: 1,1, -1297,-1297.\r\n        // \r\n        verifyException(\"glengineer.blocks.Block\", e);\r\n    }\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"2\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    VerticalBlock verticalBlock0 = new VerticalBlock(scheme0);\r\n    // Undeclared exception!\r\n    try {\r\n        verticalBlock0.charAt(1, 0);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // char position (1,0) out of block.\r\n        // Block(0,0, 1,1):\r\n        // #####\r\n        // # 2 #\r\n        // #####\r\n        // \r\n        verifyException(\"glengineer.blocks.Block\", e);\r\n    }\r\n}", "{\r\n    String[] stringArray0 = new String[2];\r\n    stringArray0[0] = \"\";\r\n    stringArray0[1] = \"\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HorizontalBlock horizontalBlock0 = null;\r\n    try {\r\n        horizontalBlock0 = new HorizontalBlock(scheme0, 0, (-197), 0, 0);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // improper block definition: 0,-197, 0,0.\r\n        // \r\n        verifyException(\"glengineer.blocks.Block\", e);\r\n    }\r\n}", "{\r\n    VerticalBlock verticalBlock0 = null;\r\n    try {\r\n        verticalBlock0 = new VerticalBlock((Scheme) null, 1629, 1629, 3366, 0);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // improper block definition: 1629,1629, 3366,0.\r\n        // \r\n        verifyException(\"glengineer.blocks.Block\", e);\r\n    }\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    VerticalBlock verticalBlock0 = new VerticalBlock(scheme0);\r\n    // Undeclared exception!\r\n    try {\r\n        verticalBlock0.containsOnlyOneWord();\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // cannot search in a trivial block\r\n        // \r\n        verifyException(\"glengineer.blocks.Block\", e);\r\n    }\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "glengineer.positions.HWordPosition", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "org.evosuite.runtime.EvoRunnerParameters", "glengineer.positions.CharPosition1", "org.evosuite.runtime.EvoRunner", "glengineer.blocks.HorizontalBlock", "glengineer.blocks.Scheme", "static org.junit.Assert.assertEquals", "glengineer.blocks.VerticalBlock" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.agents.ComponentAgent" : {
      "sequences" : [ "{\r\n    ComponentAgent componentAgent0 = new ComponentAgent(\"\");\r\n    GroupAgent groupAgent0 = componentAgent0.findDependingGroupByNames(\"\", \"\");\r\n}", "{\r\n    ComponentAgent componentAgent0 = new ComponentAgent(\"\");\r\n    boolean boolean0 = componentAgent0.isGroup(\"\", \"5\");\r\n}", "{\r\n    ComponentAgent componentAgent0 = new ComponentAgent(\"\");\r\n    ParallelGroupAgent parallelGroupAgent0 = componentAgent0.findDependingParallelGroupByNames(\"\", (String) null);\r\n}", "{\r\n    ComponentAgent componentAgent0 = new ComponentAgent(\"\");\r\n    String string0 = componentAgent0.getFirstName();\r\n}", "{\r\n    ComponentAgent componentAgent0 = new ComponentAgent(\"AhDV\");\r\n    GroupCreatorAndElementAdder groupCreatorAndElementAdder0 = mock(GroupCreatorAndElementAdder.class, new ViolatedAssumptionAnswer());\r\n    componentAgent0.addContentToGroup((GroupLayout.Group) null, groupCreatorAndElementAdder0);\r\n}", "{\r\n    ComponentAgent componentAgent0 = new ComponentAgent(\"\");\r\n    FunctionsOnComponent functionsOnComponent0 = componentAgent0.getFunctionsOnComponentImplementation();\r\n}", "{\r\n    ComponentAgent componentAgent0 = new ComponentAgent(\"o;\");\r\n    ComponentAgent componentAgent1 = componentAgent0.findDependingComponentByName(\"o;\");\r\n}", "{\r\n    ComponentAgent componentAgent0 = new ComponentAgent(\"\");\r\n    SequentialGroupAgent sequentialGroupAgent0 = componentAgent0.findDependingSequentialGroupByNames(\"\", \"\");\r\n}", "{\r\n    ComponentAgent componentAgent0 = new ComponentAgent(\"]fQ5}5vHV.\");\r\n    GapAgent gapAgent0 = new GapAgent((-313), (-1511), 0);\r\n    boolean boolean0 = componentAgent0.equals((Agent) gapAgent0);\r\n}", "{\r\n    ComponentAgent componentAgent0 = new ComponentAgent(\"\");\r\n    String string0 = componentAgent0.toString();\r\n}", "{\r\n    ComponentAgent componentAgent0 = new ComponentAgent(\"aF/6*d.m0#'O,\");\r\n    ComponentAgent componentAgent1 = componentAgent0.findDependingComponentByName(\"g:HV3e\");\r\n}", "{\r\n    ComponentAgent componentAgent0 = new ComponentAgent(\"ubdV+3\\\"aIbk\");\r\n    String string0 = componentAgent0.getLastName();\r\n}", "{\r\n    ComponentAgent componentAgent0 = new ComponentAgent(\"\");\r\n    boolean boolean0 = componentAgent0.isGap();\r\n}" ],
      "imports" : [ "glengineer.agents.GroupCreatorAndElementAdder", "glengineer.agents.Agent", "static org.junit.Assert.assertNull", "glengineer.agents.GroupAgent", "glengineer.agents.ParallelGroupAgent", "glengineer.agents.SequentialGroupAgent", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "glengineer.agents.ComponentAgent", "glengineer.agents.setters.FunctionsOnComponent", "glengineer.agents.GapAgent", "static org.evosuite.shaded.org.mockito.Mockito.*", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "javax.swing.GroupLayout", "org.evosuite.runtime.ViolatedAssumptionAnswer", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.agents.GapAgent" : {
      "sequences" : [ "{\r\n    Sizes sizes0 = new Sizes(0, 0, 1080);\r\n    GapAgent gapAgent0 = new GapAgent(sizes0);\r\n    SequentialGroupAgent sequentialGroupAgent0 = gapAgent0.findDependingSequentialGroupByNames(\"\", \"{[iJj9\");\r\n}", "{\r\n    GapAgent gapAgent0 = new GapAgent();\r\n    // Undeclared exception!\r\n    try {\r\n        gapAgent0.addContentToGroup((GroupLayout.Group) null, (GroupCreatorAndElementAdder) null);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"glengineer.agents.GapAgent\", e);\r\n    }\r\n}", "{\r\n    Sizes sizes0 = new Sizes(0);\r\n    GapAgent gapAgent0 = new GapAgent(sizes0);\r\n    String string0 = gapAgent0.getLastName();\r\n}", "{\r\n    Sizes sizes0 = new Sizes(0, 0, 1080);\r\n    GapAgent gapAgent0 = new GapAgent(sizes0);\r\n    boolean boolean0 = gapAgent0.isComponent(\"glengineer.GroupLayoutEngineer$1\");\r\n}", "{\r\n    Sizes sizes0 = new Sizes();\r\n    GapAgent gapAgent0 = new GapAgent(sizes0);\r\n    ComponentAgent componentAgent0 = gapAgent0.findDependingComponentByName(\"\");\r\n}", "{\r\n    GapAgent gapAgent0 = new GapAgent((-2846), (-3255), (-2341));\r\n}", "{\r\n    Sizes sizes0 = new Sizes(0, 0, 1080);\r\n    GapAgent gapAgent0 = new GapAgent(sizes0);\r\n    GroupAgent groupAgent0 = gapAgent0.findDependingGroupByNames(\"glengineer.GroupLayoutEngineer$1\", \"88 Ez$pc4RzR7)3l\\u0005\");\r\n}", "{\r\n    GapAgent gapAgent0 = new GapAgent((-401));\r\n    boolean boolean0 = gapAgent0.isGap();\r\n}", "{\r\n    GapAgent gapAgent0 = new GapAgent(0);\r\n    String string0 = gapAgent0.getFirstName();\r\n}", "{\r\n    Sizes sizes0 = new Sizes(0, 0, 1080);\r\n    GapAgent gapAgent0 = new GapAgent(sizes0);\r\n    gapAgent0.setSizes(1080, 2209, 1);\r\n}", "{\r\n    Sizes sizes0 = new Sizes();\r\n    GapAgent gapAgent0 = new GapAgent(sizes0);\r\n    String string0 = gapAgent0.toString();\r\n}", "{\r\n    GapAgent gapAgent0 = new GapAgent();\r\n    boolean boolean0 = gapAgent0.isGroup(\"\", \"Zfg355@=IpPo\");\r\n}", "{\r\n    GapAgent gapAgent0 = new GapAgent((-401));\r\n    ParallelGroupAgent parallelGroupAgent0 = gapAgent0.findDependingParallelGroupByNames(\"S\", \"S\");\r\n}", "{\r\n    Sizes sizes0 = new Sizes(0, 0, 1080);\r\n    GapAgent gapAgent0 = new GapAgent(sizes0);\r\n    boolean boolean0 = gapAgent0.equals((Agent) null);\r\n}" ],
      "imports" : [ "glengineer.agents.GroupCreatorAndElementAdder", "glengineer.agents.Agent", "static org.junit.Assert.assertNull", "glengineer.agents.GroupAgent", "glengineer.agents.ParallelGroupAgent", "glengineer.agents.SequentialGroupAgent", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "glengineer.agents.ComponentAgent", "glengineer.agents.GapAgent", "glengineer.agents.settings.Sizes", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "javax.swing.GroupLayout", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.Println" : {
      "sequences" : [ "{\r\n    Println println0 = new Println((Object) null);\r\n}", "{\r\n    Object object0 = new Object();\r\n    Println println0 = new Println(object0);\r\n}", "{\r\n    Println println0 = new Println();\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals", "glengineer.Println" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.agents.settings.ComponentSettings" : {
      "sequences" : [ "{\r\n    ComponentSettings componentSettings0 = new ComponentSettings();\r\n}" ],
      "imports" : [ "glengineer.agents.settings.ComponentSettings", "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.positions.CharPosition2" : {
      "sequences" : [ "{\r\n    CharPosition2 charPosition2_0 = new CharPosition2(0, 1);\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "glengineer.positions.CharPosition2", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.positions.CharPosition1" : {
      "sequences" : [ "{\r\n    CharPosition1 charPosition1_0 = new CharPosition1(0, 0);\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "glengineer.positions.CharPosition1", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.agents.settings.PreferredGapSettings" : {
      "sequences" : [ "{\r\n    LayoutStyle.ComponentPlacement layoutStyle_ComponentPlacement0 = LayoutStyle.ComponentPlacement.RELATED;\r\n    PreferredGapSettings preferredGapSettings0 = new PreferredGapSettings(layoutStyle_ComponentPlacement0, 3579, 3579);\r\n}", "{\r\n    LayoutStyle.ComponentPlacement layoutStyle_ComponentPlacement0 = LayoutStyle.ComponentPlacement.RELATED;\r\n    PreferredGapSettings preferredGapSettings0 = new PreferredGapSettings(layoutStyle_ComponentPlacement0);\r\n}" ],
      "imports" : [ "javax.swing.LayoutStyle", "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "glengineer.agents.settings.PreferredGapSettings", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.agents.settings.GapSettings" : {
      "sequences" : [ "{\r\n    GapSettings gapSettings0 = new GapSettings(0);\r\n}", "{\r\n    GapSettings gapSettings0 = new GapSettings(0, 0, 0);\r\n}", "{\r\n    GapSettings gapSettings0 = new GapSettings();\r\n    GapSettings gapSettings1 = new GapSettings(gapSettings0.sizes);\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "glengineer.agents.settings.GapSettings", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.blocks.Scheme" : {
      "sequences" : [ "{\r\n    String[] stringArray0 = new String[6];\r\n    stringArray0[0] = \"f}kY|u\";\r\n    stringArray0[1] = \"Q1cjGpM[43\";\r\n    Scheme scheme0 = null;\r\n    try {\r\n        scheme0 = new Scheme(stringArray0);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // The strings are not of equal length.\r\n        // \r\n        verifyException(\"glengineer.blocks.Scheme\", e);\r\n    }\r\n}", "{\r\n    String[] stringArray0 = new String[4];\r\n    stringArray0[0] = \"-|y\";\r\n    stringArray0[1] = \"-|y\";\r\n    stringArray0[2] = \"-|y\";\r\n    stringArray0[3] = \"-|y\";\r\n    Scheme scheme0 = null;\r\n    try {\r\n        scheme0 = new Scheme(stringArray0);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // cannot register the component name \\\"y\\\"\r\n        // \r\n        verifyException(\"glengineer.blocks.Scheme\", e);\r\n    }\r\n}", "{\r\n    String[] stringArray0 = new String[0];\r\n    Scheme scheme0 = null;\r\n    try {\r\n        scheme0 = new Scheme(stringArray0);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // The scheme has no lines.\r\n        // \r\n        verifyException(\"glengineer.blocks.Scheme\", e);\r\n    }\r\n}", "{\r\n    String[] stringArray0 = new String[2];\r\n    stringArray0[0] = \"\";\r\n    stringArray0[1] = \"\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    CharPosition1 charPosition1_0 = scheme0.getPos1();\r\n    VWordPosition vWordPosition0 = scheme0.verticalLineAt((CharPosition) charPosition1_0);\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"5\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    CharPosition1 charPosition1_0 = scheme0.getPos1();\r\n    VWordPosition vWordPosition0 = scheme0.verticalLineAt((CharPosition) charPosition1_0);\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    Set<HWordPosition> set0 = scheme0.getHLinesPositions();\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"V-'Ds}Z\";\r\n    Scheme scheme0 = null;\r\n    try {\r\n        scheme0 = new Scheme(stringArray0);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // A wrong symbol ''' was found on the scheme under position (2,0)\r\n        // \r\n        verifyException(\"glengineer.blocks.Scheme\", e);\r\n    }\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"5\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HWordPosition hWordPosition0 = scheme0.gapAtLine((WordPosition) null);\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"V-DSXs}Z\";\r\n    Scheme scheme0 = null;\r\n    try {\r\n        scheme0 = new Scheme(stringArray0);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // A wrong symbol '}' was found on the scheme under position (6,0)\r\n        // \r\n        verifyException(\"glengineer.blocks.Scheme\", e);\r\n    }\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"5\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HWordPosition hWordPosition0 = scheme0.anyHElementAt(0, 0);\r\n}", "{\r\n    String[] stringArray0 = new String[2];\r\n    stringArray0[0] = \"\";\r\n    stringArray0[1] = \"\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    boolean boolean0 = scheme0.containsGapName(\"\");\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"f-+\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"5\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    Set<VWordPosition> set0 = scheme0.getVLinesPositions();\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"5\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    String string0 = scheme0.toString();\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"+HVTV9T5U\";\r\n    Scheme scheme0 = null;\r\n    try {\r\n        scheme0 = new Scheme(stringArray0);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // Unrecognizable construction found in the scheme under position (0,0)\r\n        // \r\n        verifyException(\"glengineer.blocks.Scheme\", e);\r\n    }\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    CharPosition1 charPosition1_0 = new CharPosition1(1, 747);\r\n    HWordPosition hWordPosition0 = scheme0.anyHElementAt((CharPosition) charPosition1_0);\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"-|y\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    HWordPosition hWordPosition0 = scheme0.anyHElementAt(1, 0);\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"-|y\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    CharPosition1 charPosition1_0 = scheme0.getPos1();\r\n    VWordPosition vWordPosition0 = scheme0.verticalLineAt((CharPosition) charPosition1_0);\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"-|+\";\r\n    Scheme scheme0 = null;\r\n    try {\r\n        scheme0 = new Scheme(stringArray0);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // Unrecognizable construction found in the scheme under position (2,0)\r\n        // \r\n        verifyException(\"glengineer.blocks.Scheme\", e);\r\n    }\r\n}", "{\r\n    String[] stringArray0 = new String[2];\r\n    stringArray0[0] = \"cannot register the component name \\\"\";\r\n    stringArray0[1] = \"cannot register the component name \\\"\";\r\n    Scheme scheme0 = null;\r\n    try {\r\n        scheme0 = new Scheme(stringArray0);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // A wrong symbol '\\\"' was found on the scheme under position (35,0)\r\n        // \r\n        verifyException(\"glengineer.blocks.Scheme\", e);\r\n    }\r\n}", "{\r\n    String[] stringArray0 = new String[1];\r\n    stringArray0[0] = \"\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    boolean boolean0 = scheme0.containsComponentName(\"Improper subline coodinates.\");\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "glengineer.positions.HWordPosition", "glengineer.positions.WordPosition", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "java.util.Set", "org.junit.Test", "static org.junit.Assert.*", "glengineer.positions.VWordPosition", "glengineer.positions.CharPosition", "org.evosuite.runtime.EvoRunnerParameters", "glengineer.positions.CharPosition1", "org.evosuite.runtime.EvoRunner", "glengineer.blocks.Scheme", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.agents.settings.ParallelGroupSettings" : {
      "sequences" : [ "{\r\n    ParallelGroupSettings parallelGroupSettings0 = new ParallelGroupSettings();\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals", "glengineer.agents.settings.ParallelGroupSettings" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "glengineer.blocks.VerticalBlock" : {
      "sequences" : [ "{\r\n    String[] stringArray0 = new String[4];\r\n    stringArray0[0] = \"-\";\r\n    stringArray0[1] = \"-\";\r\n    stringArray0[2] = \"-\";\r\n    stringArray0[3] = \"-\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    VerticalBlock verticalBlock0 = new VerticalBlock(scheme0);\r\n    List<Block> list0 = verticalBlock0.extractSequentialSubblocks();\r\n    // Undeclared exception!\r\n    try {\r\n        verticalBlock0.extractParallelSubblocksWithoutLines();\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"glengineer.blocks.VerticalBlock\", e);\r\n    }\r\n}", "{\r\n    VerticalBlock verticalBlock0 = null;\r\n    try {\r\n        verticalBlock0 = new VerticalBlock((Block) null);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"glengineer.blocks.VerticalBlock\", e);\r\n    }\r\n}", "{\r\n    String[] stringArray0 = new String[4];\r\n    stringArray0[0] = \"\";\r\n    stringArray0[1] = \"\";\r\n    stringArray0[2] = \"\";\r\n    stringArray0[3] = \"\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    VerticalBlock verticalBlock0 = new VerticalBlock(scheme0);\r\n    LinkedHashSet<VWordPosition> linkedHashSet0 = new LinkedHashSet<VWordPosition>();\r\n    VWordPosition vWordPosition0 = new VWordPosition(4, 0, 10);\r\n    boolean boolean0 = linkedHashSet0.add(vWordPosition0);\r\n    // Undeclared exception!\r\n    try {\r\n        verticalBlock0.extractParallelSubblocksSeparatedByLines(linkedHashSet0);\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // improper block definition: 0,0, 4,4.\r\n        // \r\n        verifyException(\"glengineer.blocks.Block\", e);\r\n    }\r\n}", "{\r\n    String[] stringArray0 = new String[4];\r\n    stringArray0[0] = \"\";\r\n    stringArray0[1] = \"\";\r\n    stringArray0[2] = \"\";\r\n    stringArray0[3] = \"\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    VerticalBlock verticalBlock0 = new VerticalBlock(scheme0);\r\n    LinkedHashSet<VWordPosition> linkedHashSet0 = new LinkedHashSet<VWordPosition>();\r\n    VWordPosition vWordPosition0 = new VWordPosition(verticalBlock0);\r\n    boolean boolean0 = linkedHashSet0.add(vWordPosition0);\r\n    VWordPosition vWordPosition1 = new VWordPosition(0, 0, 4);\r\n    boolean boolean1 = linkedHashSet0.add(vWordPosition1);\r\n    List<Block> list0 = verticalBlock0.extractParallelSubblocksSeparatedByLines(linkedHashSet0);\r\n}", "{\r\n    String[] stringArray0 = new String[4];\r\n    stringArray0[0] = \".\";\r\n    stringArray0[1] = \".\";\r\n    stringArray0[2] = \".\";\r\n    stringArray0[3] = \".\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    VerticalBlock verticalBlock0 = new VerticalBlock(scheme0);\r\n    List<Block> list0 = verticalBlock0.extractSequentialSubblocks();\r\n}", "{\r\n    String[] stringArray0 = new String[4];\r\n    stringArray0[0] = \".\";\r\n    stringArray0[1] = \".\";\r\n    stringArray0[2] = \".\";\r\n    stringArray0[3] = \".\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    VerticalBlock verticalBlock0 = new VerticalBlock(scheme0);\r\n    List<Block> list0 = verticalBlock0.extractParallelSubblocks();\r\n}", "{\r\n    String[] stringArray0 = new String[4];\r\n    stringArray0[0] = \".\";\r\n    stringArray0[1] = \".\";\r\n    stringArray0[2] = \".\";\r\n    stringArray0[3] = \".\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    VerticalBlock verticalBlock0 = new VerticalBlock(scheme0);\r\n    LinkedHashSet<VWordPosition> linkedHashSet0 = new LinkedHashSet<VWordPosition>();\r\n    List<Block> list0 = verticalBlock0.extractParallelSubblocksSeparatedByLines(linkedHashSet0);\r\n}", "{\r\n    String[] stringArray0 = new String[2];\r\n    stringArray0[0] = \" \";\r\n    stringArray0[1] = \" \";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    VerticalBlock verticalBlock0 = new VerticalBlock(scheme0);\r\n    // Undeclared exception!\r\n    try {\r\n        verticalBlock0.extractParallelSubblocksWithoutLines();\r\n    } catch (IllegalArgumentException e) {\r\n        // \r\n        // Can not extract a group from an empty block:\r\n        // Block(0,0, 1,2):\r\n        // #####\r\n        // #   #\r\n        // #   #\r\n        // #####\r\n        // \r\n        verifyException(\"glengineer.blocks.VerticalBlock\", e);\r\n    }\r\n}", "{\r\n    String[] stringArray0 = new String[4];\r\n    stringArray0[0] = \".\";\r\n    stringArray0[1] = \".\";\r\n    stringArray0[2] = \".\";\r\n    stringArray0[3] = \".\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    VerticalBlock verticalBlock0 = new VerticalBlock(scheme0, 0, 0, 0, 4);\r\n    List<Block> list0 = verticalBlock0.extractParallelSubblocksWithoutLines();\r\n}", "{\r\n    String[] stringArray0 = new String[4];\r\n    stringArray0[0] = \".\";\r\n    stringArray0[1] = \".\";\r\n    stringArray0[2] = \".\";\r\n    stringArray0[3] = \".\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    VerticalBlock verticalBlock0 = new VerticalBlock(scheme0);\r\n    VWordPosition vWordPosition0 = new VWordPosition(verticalBlock0);\r\n    CharPosition1 charPosition1_0 = vWordPosition0.getStart();\r\n    VerticalBlock verticalBlock1 = new VerticalBlock(scheme0, charPosition1_0, charPosition1_0);\r\n    List<Block> list0 = verticalBlock1.extractParallelSubblocks();\r\n}", "{\r\n    String[] stringArray0 = new String[4];\r\n    stringArray0[0] = \"-\";\r\n    stringArray0[1] = \"-\";\r\n    stringArray0[2] = \"-\";\r\n    stringArray0[3] = \"-\";\r\n    Scheme scheme0 = new Scheme(stringArray0);\r\n    VerticalBlock verticalBlock0 = new VerticalBlock(scheme0);\r\n    LinkedHashSet<VWordPosition> linkedHashSet0 = new LinkedHashSet<VWordPosition>();\r\n    List<Block> list0 = verticalBlock0.extractParallelSubblocksSeparatedByLines(linkedHashSet0);\r\n}", "{\r\n    VerticalBlock verticalBlock0 = null;\r\n    try {\r\n        verticalBlock0 = new VerticalBlock((Block) null, 0, (-725), (-1), (-557));\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"glengineer.blocks.VerticalBlock\", e);\r\n    }\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "glengineer.blocks.Block", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "glengineer.positions.VWordPosition", "java.util.List", "org.evosuite.runtime.EvoRunnerParameters", "glengineer.positions.CharPosition1", "org.evosuite.runtime.EvoRunner", "glengineer.blocks.Scheme", "static org.junit.Assert.assertEquals", "java.util.LinkedHashSet", "glengineer.blocks.VerticalBlock" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    }
  },
  "test_generation_tool" : "EvoSuiteTestGenerator"
}
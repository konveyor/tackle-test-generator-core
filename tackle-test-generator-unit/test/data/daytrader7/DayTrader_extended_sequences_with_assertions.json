{
  "seq4" : {
    "class_name" : "com.ibm.websphere.samples.daytrader.entities.OrderDataBean",
    "sequence" : "MockDate mockDate0 = new MockDate(1887, (-1744), 1887);\r\n    BigInteger bigInteger0 = BigInteger.TEN;\r\nassertEquals(0, ((java.math.BigInteger) bigInteger0).getLowestSetBit());\r\n    BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);\r\nassertEquals(1, getFieldValue(bigDecimal0, \"ROUND_DOWN\"));\r\nassertEquals(7, getFieldValue(bigDecimal0, \"ROUND_UNNECESSARY\"));\r\nassertEquals(2, getFieldValue(bigDecimal0, \"ROUND_CEILING\"));\r\nassertEquals(5, getFieldValue(bigDecimal0, \"ROUND_HALF_DOWN\"));\r\nassertEquals(4, getFieldValue(bigDecimal0, \"ROUND_HALF_UP\"));\r\nassertEquals(0, getFieldValue(bigDecimal0, \"ROUND_UP\"));\r\nassertEquals(3, getFieldValue(bigDecimal0, \"ROUND_FLOOR\"));\r\nassertEquals(6, getFieldValue(bigDecimal0, \"ROUND_HALF_EVEN\"));\r\n    QuoteDataBean quoteDataBean0 = new QuoteDataBean();\r\n    HoldingDataBean holdingDataBean0 = new HoldingDataBean(0.0, bigDecimal0, mockDate0, (AccountDataBean) null, quoteDataBean0);\r\nassertEquals(0.0, (double) ((com.ibm.websphere.samples.daytrader.entities.HoldingDataBean) holdingDataBean0).getQuantity(), 0.015);\r\nassertEquals(__m2m_null, ((java.lang.Integer) ((com.ibm.websphere.samples.daytrader.entities.HoldingDataBean) holdingDataBean0).getHoldingID()).intValue());\r\nassertEquals(\"__m2m_null\", ((com.ibm.websphere.samples.daytrader.entities.HoldingDataBean) holdingDataBean0).getQuoteID());\r\n    OrderDataBean orderDataBean0 = new OrderDataBean(\"K%I**.E=?kHJ\", \"r5{n{dev r3?];\", mockDate0, mockDate0, (-1744), bigDecimal0, bigDecimal0, (AccountDataBean) null, quoteDataBean0, holdingDataBean0);\r\nassertEquals(-1744.0, (double) ((com.ibm.websphere.samples.daytrader.entities.OrderDataBean) orderDataBean0).getQuantity(), 0.015);\r\nassertEquals(\"K%I**.E=?kHJ\", ((com.ibm.websphere.samples.daytrader.entities.OrderDataBean) orderDataBean0).getOrderType());\r\nassertEquals(\"r5{n{dev r3?];\", ((com.ibm.websphere.samples.daytrader.entities.OrderDataBean) orderDataBean0).getOrderStatus());\r\nassertEquals(__m2m_null, ((java.lang.Integer) ((com.ibm.websphere.samples.daytrader.entities.OrderDataBean) orderDataBean0).getOrderID()).intValue());\r\nassertEquals(\"__m2m_null\", ((com.ibm.websphere.samples.daytrader.entities.OrderDataBean) orderDataBean0).getSymbol());\r\n",
    "imports" : [ "java.math.BigDecimal", "org.evosuite.runtime.mock.java.util.MockDate", "org.evosuite.runtime.EvoRunnerParameters", "com.ibm.websphere.samples.daytrader.entities.HoldingDataBean", "org.evosuite.runtime.EvoRunner", "com.ibm.websphere.samples.daytrader.entities.AccountDataBean", "org.junit.runner.RunWith", "org.junit.Test", "java.math.BigInteger", "org.junit.Assert", "com.ibm.websphere.samples.daytrader.entities.QuoteDataBean", "com.ibm.websphere.samples.daytrader.entities.OrderDataBean", "static org.junit.Assert.*" ]
  },
  "seq3" : {
    "class_name" : "com.ibm.websphere.samples.daytrader.entities.QuoteDataBean",
    "sequence" : "BigDecimal bigDecimal0 = BigDecimal.ZERO;\r\nassertEquals(1, getFieldValue(bigDecimal0, \"ROUND_DOWN\"));\r\nassertEquals(7, getFieldValue(bigDecimal0, \"ROUND_UNNECESSARY\"));\r\nassertEquals(2, getFieldValue(bigDecimal0, \"ROUND_CEILING\"));\r\nassertEquals(5, getFieldValue(bigDecimal0, \"ROUND_HALF_DOWN\"));\r\nassertEquals(4, getFieldValue(bigDecimal0, \"ROUND_HALF_UP\"));\r\nassertEquals(0, getFieldValue(bigDecimal0, \"ROUND_UP\"));\r\nassertEquals(3, getFieldValue(bigDecimal0, \"ROUND_FLOOR\"));\r\nassertEquals(6, getFieldValue(bigDecimal0, \"ROUND_HALF_EVEN\"));\r\n    QuoteDataBean quoteDataBean0 = new QuoteDataBean(\"\\t\", \"\", 1179, bigDecimal0, bigDecimal0, bigDecimal0, bigDecimal0, 1179);\r\nassertEquals(1179.0, (double) ((com.ibm.websphere.samples.daytrader.entities.QuoteDataBean) quoteDataBean0).getVolume(), 0.015);\r\nassertEquals(\"\", ((com.ibm.websphere.samples.daytrader.entities.QuoteDataBean) quoteDataBean0).getCompanyName());\r\nassertEquals(\"\t\", ((com.ibm.websphere.samples.daytrader.entities.QuoteDataBean) quoteDataBean0).getSymbol());\r\n",
    "imports" : [ "java.math.BigDecimal", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "com.ibm.websphere.samples.daytrader.util.TradeConfig", "org.junit.runner.RunWith", "org.junit.Test", "org.junit.Assert", "com.ibm.websphere.samples.daytrader.entities.QuoteDataBean", "static org.junit.Assert.*" ]
  },
  "seq6" : {
    "class_name" : "com.ibm.websphere.samples.daytrader.util.FinancialUtils",
    "sequence" : "BigDecimal bigDecimal0 = FinancialUtils.ZERO;\r\nassertEquals(1, getFieldValue(bigDecimal0, \"ROUND_DOWN\"));\r\nassertEquals(7, getFieldValue(bigDecimal0, \"ROUND_UNNECESSARY\"));\r\nassertEquals(2, getFieldValue(bigDecimal0, \"ROUND_CEILING\"));\r\nassertEquals(5, getFieldValue(bigDecimal0, \"ROUND_HALF_DOWN\"));\r\nassertEquals(4, getFieldValue(bigDecimal0, \"ROUND_HALF_UP\"));\r\nassertEquals(0, getFieldValue(bigDecimal0, \"ROUND_UP\"));\r\nassertEquals(3, getFieldValue(bigDecimal0, \"ROUND_FLOOR\"));\r\nassertEquals(6, getFieldValue(bigDecimal0, \"ROUND_HALF_EVEN\"));\r\n    FinancialUtils financialUtils0 = new FinancialUtils();\r\n    BigDecimal bigDecimal1 = FinancialUtils.computeGainPercent(financialUtils0.ZERO, bigDecimal0);\r\nassertEquals(1, getFieldValue(bigDecimal1, \"ROUND_DOWN\"));\r\nassertEquals(7, getFieldValue(bigDecimal1, \"ROUND_UNNECESSARY\"));\r\nassertEquals(2, getFieldValue(bigDecimal1, \"ROUND_CEILING\"));\r\nassertEquals(5, getFieldValue(bigDecimal1, \"ROUND_HALF_DOWN\"));\r\nassertEquals(4, getFieldValue(bigDecimal1, \"ROUND_HALF_UP\"));\r\nassertEquals(0, getFieldValue(bigDecimal1, \"ROUND_UP\"));\r\nassertEquals(3, getFieldValue(bigDecimal1, \"ROUND_FLOOR\"));\r\nassertEquals(6, getFieldValue(bigDecimal1, \"ROUND_HALF_EVEN\"));\r\n",
    "imports" : [ "com.ibm.websphere.samples.daytrader.util.FinancialUtils", "java.math.BigDecimal", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "org.junit.Assert", "static org.junit.Assert.*" ]
  },
  "seq2" : {
    "class_name" : "com.ibm.websphere.samples.daytrader.entities.AccountDataBean",
    "sequence" : "Integer integer0 = new Integer((-1880));\r\nassertEquals(-1880, ((java.lang.Integer) integer0).intValue());\r\n    MockDate mockDate0 = new MockDate((-1880), 1606, 0, 1606, (-1880), 0);\r\n    BigDecimal bigDecimal0 = BigDecimal.TEN;\r\nassertEquals(1, getFieldValue(bigDecimal0, \"ROUND_DOWN\"));\r\nassertEquals(7, getFieldValue(bigDecimal0, \"ROUND_UNNECESSARY\"));\r\nassertEquals(2, getFieldValue(bigDecimal0, \"ROUND_CEILING\"));\r\nassertEquals(5, getFieldValue(bigDecimal0, \"ROUND_HALF_DOWN\"));\r\nassertEquals(4, getFieldValue(bigDecimal0, \"ROUND_HALF_UP\"));\r\nassertEquals(0, getFieldValue(bigDecimal0, \"ROUND_UP\"));\r\nassertEquals(3, getFieldValue(bigDecimal0, \"ROUND_FLOOR\"));\r\nassertEquals(6, getFieldValue(bigDecimal0, \"ROUND_HALF_EVEN\"));\r\n    AccountDataBean accountDataBean0 = new AccountDataBean(integer0, (-1880), 1606, mockDate0, mockDate0, bigDecimal0, bigDecimal0, \"\");\r\nassertEquals(-1880, ((java.lang.Integer) ((com.ibm.websphere.samples.daytrader.entities.AccountDataBean) accountDataBean0).getAccountID()).intValue());\r\nassertEquals(-1880, ((com.ibm.websphere.samples.daytrader.entities.AccountDataBean) accountDataBean0).getLoginCount());\r\nassertEquals(1606, ((com.ibm.websphere.samples.daytrader.entities.AccountDataBean) accountDataBean0).getLogoutCount());\r\nassertEquals(\"\", ((com.ibm.websphere.samples.daytrader.entities.AccountDataBean) accountDataBean0).getProfileID());\r\n",
    "imports" : [ "java.math.BigDecimal", "org.evosuite.runtime.mock.java.util.MockDate", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "com.ibm.websphere.samples.daytrader.entities.AccountDataBean", "org.junit.runner.RunWith", "org.junit.Test", "org.junit.Assert", "static org.junit.Assert.*" ]
  },
  "seq1" : {
    "class_name" : "com.ibm.websphere.samples.daytrader.util.TradeConfig",
    "sequence" : "TradeConfig tradeConfig0 = new TradeConfig();\r\n    TradeConfig.setRunTimeModeNames(tradeConfig0.orderProcessingModeNames);\r\n",
    "imports" : [ "java.math.BigDecimal", "com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "org.junit.Assert", "com.ibm.websphere.samples.daytrader.entities.QuoteDataBean", "java.util.LinkedList", "static org.junit.Assert.*" ]
  },
  "seq10" : {
    "class_name" : "com.ibm.websphere.samples.daytrader.util.TradeConfig",
    "sequence" : "TradeConfig.setRunTimeModeNames((String[]) null);\r\n",
    "imports" : [ "java.math.BigDecimal", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "com.ibm.websphere.samples.daytrader.util.TradeConfig", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.*" ]
  },
  "seq8" : {
    "class_name" : "com.ibm.websphere.samples.daytrader.util.Log",
    "sequence" : "MockThrowable mockThrowable0 = new MockThrowable();\r\n    Log.error((Throwable) mockThrowable0, (String) null);\r\n",
    "imports" : [ "javax.ejb.EJBException", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "com.ibm.websphere.samples.daytrader.util.Log", "org.evosuite.runtime.mock.java.lang.MockThrowable", "static org.junit.Assert.*" ]
  },
  "seq7" : {
    "class_name" : "com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean",
    "sequence" : "RunStatsDataBean runStatsDataBean0 = new RunStatsDataBean();\r\n    runStatsDataBean0.setNewUserCount((-43));\r\n",
    "imports" : [ "com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "org.junit.Assert", "static org.junit.Assert.*" ]
  }
}
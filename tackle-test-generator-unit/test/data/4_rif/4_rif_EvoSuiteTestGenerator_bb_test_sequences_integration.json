{
  "test_sequences" : {
    "com.densebrain.rif.client.RIFInvoker" : {
      "sequences" : [ "{\r\n    RIFManager rIFManager0 = new RIFManager(\"\");\r\n    Class<Integer> class0 = Integer.class;\r\n    RIFInvoker<RIFInvoker<String>> rIFInvoker0 = null;\r\n    try {\r\n        rIFInvoker0 = new RIFInvoker<RIFInvoker<String>>(rIFManager0, class0);\r\n    } catch (Throwable e) {\r\n        // \r\n        // Interface class must be an interface\r\n        // \r\n        verifyException(\"com.densebrain.rif.client.RIFInvoker\", e);\r\n    }\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "com.densebrain.rif.client.RIFInvoker", "com.densebrain.rif.client.RIFManager", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.densebrain.rif.server.transport.WebServiceContainer" : {
      "sequences" : [ "{\r\n    WebServiceContainer webServiceContainer0 = WebServiceContainer.newInstance((ConfigurationContext) null);\r\n    EndpointReference endpointReference0 = webServiceContainer0.getEPRForService(\"\", \"\");\r\n}", "{\r\n    WebServiceContainer webServiceContainer0 = WebServiceContainer.newInstance((String) null, 114, (String) null);\r\n}", "{\r\n    WebServiceContainer webServiceContainer0 = WebServiceContainer.newInstance(\"&gt;\", (-2021), \"&gt;\");\r\n    Class<WebServiceDescriptor> class0 = WebServiceDescriptor.class;\r\n    webServiceContainer0.configureService(class0, \"org.apache.ws.commons.schema.XmlSchema\", \"#w''>b&@'|Yu\");\r\n    try {\r\n        webServiceContainer0.restartContainer();\r\n    } catch (RemoteException e) {\r\n        // \r\n        // Unable to add service; nested exception is:\r\n        // \\torg.apache.axis2.AxisFault: Loop has been executed more times than the allowed 10000; nested exception is:\r\n        // \\torg.evosuite.runtime.TooManyResourcesException: Loop has been executed more times than the allowed 10000\r\n        // \r\n        verifyException(\"com.densebrain.rif.server.transport.WebServiceContainer\", e);\r\n    }\r\n}", "{\r\n    WebServiceContainer webServiceContainer0 = WebServiceContainer.newInstance(\"\", 45, \"http://\");\r\n    WebServiceContainer webServiceContainer1 = webServiceContainer0.restartContainer();\r\n}", "{\r\n    WebServiceContainer webServiceContainer0 = WebServiceContainer.newInstance(\"H9x8#bm\", (-119), \"BXO`'sx|YDg:A9m@:1\");\r\n    WebServiceContainer webServiceContainer1 = webServiceContainer0.restartContainer();\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.apache.axis2.context.ConfigurationContext", "com.densebrain.rif.server.transport.WebServiceContainer", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "org.apache.axis2.addressing.EndpointReference", "java.rmi.RemoteException", "org.evosuite.runtime.EvoRunnerParameters", "com.densebrain.rif.server.transport.WebServiceDescriptor", "org.evosuite.runtime.EvoRunner", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.densebrain.rif.client.service.types.InvokeResponse" : {
      "sequences" : [ "{\r\n    InvokeResponse invokeResponse0 = new InvokeResponse();\r\n    String string0 = invokeResponse0.get_return();\r\n}", "{\r\n    InvokeResponse invokeResponse0 = new InvokeResponse();\r\n    // Undeclared exception!\r\n    try {\r\n        invokeResponse0.getPullParser(invokeResponse0.MY_QNAME);\r\n    } catch (NullPointerException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"org.evosuite.runtime.System\", e);\r\n    }\r\n}", "{\r\n    InvokeResponse.Factory invokeResponse_Factory0 = new InvokeResponse.Factory();\r\n}", "{\r\n    InvokeResponse invokeResponse0 = new InvokeResponse();\r\n    invokeResponse0.set_return(\"\\\"++iug5yZf F:A\");\r\n    XMLStreamReader xMLStreamReader0 = invokeResponse0.getPullParser(invokeResponse0.MY_QNAME);\r\n    try {\r\n        InvokeResponse.Factory.parse(xMLStreamReader0);\r\n    } catch (Exception e) {\r\n        // \r\n        // javax.xml.stream.XMLStreamException\r\n        // \r\n        verifyException(\"com.densebrain.rif.client.service.types.InvokeResponse$Factory\", e);\r\n    }\r\n}" ],
      "imports" : [ "com.densebrain.rif.client.service.types.InvokeResponse", "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "javax.xml.stream.XMLStreamReader", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.densebrain.rif.server.transport.WebServiceDescriptor" : {
      "sequences" : [ "{\r\n    Class<String> class0 = String.class;\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor(class0, \"1GXre!=Jq|0E*e\", \"com.densebrain.rif.server.transport.WebServiceDescriptor\");\r\n    boolean boolean0 = webServiceDescriptor0.equals(class0);\r\n}", "{\r\n    Class<String> class0 = String.class;\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor(class0, \"1GXre!=Jq|0E*e\", \"com.densebrain.rif.server.transport.WebServiceDescriptor\");\r\n    webServiceDescriptor0.setTypesNamespace(\"yeA~hNJ|>Z>A[n\");\r\n}", "{\r\n    Class<String> class0 = String.class;\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor(class0, \"1GXre!=Jq|0E*e\", \"com.densebrain.rif.server.transport.WebServiceDescriptor\");\r\n    int int0 = webServiceDescriptor0.hashCode();\r\n}", "{\r\n    Class<WebServiceDescriptor> class0 = WebServiceDescriptor.class;\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor(class0, (String) null, \"\");\r\n    String string0 = webServiceDescriptor0.getTypesNamespace();\r\n}", "{\r\n    Class<WebServiceDescriptor> class0 = WebServiceDescriptor.class;\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor(class0, \"E_\", \"E_\");\r\n    WebServiceDescriptor webServiceDescriptor1 = new WebServiceDescriptor(class0, \"E_\", \"E_\");\r\n    boolean boolean0 = webServiceDescriptor0.equals(webServiceDescriptor1);\r\n}", "{\r\n    Class<String> class0 = String.class;\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor(class0, \"1GXre!=Jq|0E*e\", \"com.densebrain.rif.server.transport.WebServiceDescriptor\");\r\n    Class<Object> class1 = Object.class;\r\n    WebServiceDescriptor webServiceDescriptor1 = new WebServiceDescriptor(class1, \"zW_w\", \"1GXre!=Jq|0E*e\");\r\n    boolean boolean0 = webServiceDescriptor0.equals(webServiceDescriptor1);\r\n}", "{\r\n    Class<String> class0 = String.class;\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor(class0, \"1GXre!=Jq|0E*e\", \"com.densebrain.rif.server.transport.WebServiceDescriptor\");\r\n    Class class1 = webServiceDescriptor0.getServiceClazz();\r\n}", "{\r\n    Class<WebServiceDescriptor> class0 = WebServiceDescriptor.class;\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor((Class) null, (String) null, \"Y\");\r\n    WebServiceDescriptor webServiceDescriptor1 = new WebServiceDescriptor(class0, \"NsrZ\", \"NsrZ\");\r\n    webServiceDescriptor1.setServiceClazz((Class) null);\r\n    boolean boolean0 = webServiceDescriptor0.equals(webServiceDescriptor1);\r\n}", "{\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor((Class) null, (String) null, \"Y\");\r\n    boolean boolean0 = webServiceDescriptor0.equals((Object) null);\r\n}", "{\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor((Class) null, (String) null, \"Y\");\r\n    int int0 = webServiceDescriptor0.hashCode();\r\n}", "{\r\n    Class<WebServiceDescriptor> class0 = WebServiceDescriptor.class;\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor((Class) null, (String) null, \"Y\");\r\n    WebServiceDescriptor webServiceDescriptor1 = new WebServiceDescriptor(class0, \"NsrZ\", \"NsrZ\");\r\n    boolean boolean0 = webServiceDescriptor0.equals(webServiceDescriptor1);\r\n}", "{\r\n    Class<String> class0 = String.class;\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor(class0, \"1GXre!=Jq|0E*e\", \"com.densebrain.rif.server.transport.WebServiceDescriptor\");\r\n    webServiceDescriptor0.setTargetNamespace(\"\");\r\n}", "{\r\n    Class<WebServiceDescriptor> class0 = WebServiceDescriptor.class;\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor(class0, \"5P&WQMjC?B-\", \"5P&WQMjC?B-\");\r\n    boolean boolean0 = webServiceDescriptor0.equals(webServiceDescriptor0);\r\n}", "{\r\n    Class<String> class0 = String.class;\r\n    WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor(class0, \"1GXre!=Jq|0E*e\", \"com.densebrain.rif.server.transport.WebServiceDescriptor\");\r\n    String string0 = webServiceDescriptor0.getTargetNamespace();\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "com.densebrain.rif.server.transport.WebServiceDescriptor", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.densebrain.rif.client.service.types.Invoke" : {
      "sequences" : [ "{\r\n    Invoke invoke0 = new Invoke();\r\n    String string0 = invoke0.getClassName();\r\n}", "{\r\n    Invoke invoke0 = new Invoke();\r\n    String string0 = invoke0.getMethodName();\r\n}", "{\r\n    Invoke invoke0 = new Invoke();\r\n    String string0 = invoke0.getSerializedParams();\r\n}", "{\r\n    Invoke.Factory invoke_Factory0 = new Invoke.Factory();\r\n}", "{\r\n    Invoke invoke0 = new Invoke();\r\n    invoke0.setClassName(\"http:/densebrain.com/rif/clie_t/service/types\");\r\n    invoke0.setMethodName(\"http:/densebrain.com/rif/clie_t/service/types\");\r\n    invoke0.setSerializedParams(\"http:/densebrain.com/rif/clie_t/service/types\");\r\n    XMLStreamReader xMLStreamReader0 = invoke0.getPullParser(invoke0.MY_QNAME);\r\n    try {\r\n        Invoke.Factory.parse(xMLStreamReader0);\r\n    } catch (Exception e) {\r\n        // \r\n        // javax.xml.stream.XMLStreamException\r\n        // \r\n        verifyException(\"com.densebrain.rif.client.service.types.Invoke$Factory\", e);\r\n    }\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "javax.xml.stream.XMLStreamReader", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals", "com.densebrain.rif.client.service.types.Invoke" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "com.densebrain.rif.util.ObjectUtility" : {
      "sequences" : [ "{\r\n    byte[] byteArray0 = ObjectUtility.serializeObject(\"IsG[85r&Srl\");\r\n    String string0 = ObjectUtility.encodeBytes(byteArray0);\r\n}", "{\r\n    try {\r\n        ObjectUtility.deserializeObjectBase64Encoded(\"a\");\r\n    } catch (EOFException e) {\r\n        // \r\n        // no message in exception (getMessage() returned null)\r\n        // \r\n        verifyException(\"java.io.ObjectInputStream$PeekInputStream\", e);\r\n    }\r\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals", "java.io.EOFException", "com.densebrain.rif.util.ObjectUtility" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    }
  },
  "test_generation_tool" : "EvoSuiteTestGenerator"
}